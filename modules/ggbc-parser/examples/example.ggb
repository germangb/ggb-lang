mod types {
    struct Bar {
        field: u8
        composite:struct {
            field:u8
            field2:u8
        }
    }
}

struct Foo {
    field:[u8 4]
    bar:types::Bar
}

mod math {
    fn add(a:u8
           b:u8
           c:u8
           d:u8):u8 {
        let tmp:u8 = (+a b)
        return (+ a (+ b (+ c d)))
    }

    fn mul(a:u8 b:u8):u8 {
        (&= a 0xf)
        (&= b 0xf)
        let tmp:u8 = 0
        for _i:u8 in 0..b {
            (+= tmp a)
        }
        return tmp
    }
}