// generated (ggbc/src/bin/const_expr_gen.sh)
use ggbc::{byteorder::NativeEndian, ir::Ir, parser::parse};
use ggbc_vm::{Machine, Opts};

fn test_const_expr(input: &str) {
    let ast = parse(input).unwrap();
    let ir: Ir<NativeEndian> = Ir::new(&ast);
    let result = Machine::new(&ir, Opts::default()).run().static_[0];
    assert_eq!(0xff, result);
}
#[test]
fn const_expr_1() {
    test_const_expr("static RESULT:u8 (= RESULT (+ (- (- 252 (- 178 (+ 27 (- (+ (- (- (+ (+ 9 (- 241 (+ (- (+ 53 54) 42) 130))) 167) 66) 85) 71) (+ 32 0))))) (- 191 (+ 31 0))) 204))");
}
#[test]
fn const_expr_2() {
    test_const_expr("static RESULT:u8 (= RESULT (- (+ 51 204) 0))");
}
#[test]
fn const_expr_3() {
    test_const_expr("static RESULT:u8 (= RESULT (+ (+ (- (+ (- 25 2) 118) 78) (+ 192 (- 212 (+ 53 (+ 22 137))))) (- (- 232 32) (+ 28 (+ 24 148)))))");
}
#[test]
fn const_expr_4() {
    test_const_expr("static RESULT:u8 (= RESULT (- (- (- (+ (- (+ (+ (+ 63 (- 25 25)) 192) 0) 0) (- (+ 167 (- 131 (- (+ (+ 46 (+ (+ 6 (+ (+ (+ (- 173 173) (- 179 179)) 0) 0)) (+ 41 (- (+ (+ 8 (- 121 80)) (- (+ 70 141) (+ 3 10))) 247)))) (+ (+ (+ (+ 5 (+ 2 (+ 1 7))) (+ (- 49 (+ (+ 6 39) (- 117 117))) (+ (+ 0 (+ 0 3)) 9))) (- (+ 2 14) (+ (+ (- (- 148 136) 10) 6) (+ 1 7)))) (- 206 (+ 23 120)))) 56))) (+ (+ (+ 3 24) (+ (+ 0 (+ 0 0)) 0)) 140))) (- (- 149 53) 96)) 0) 0))");
}
#[test]
fn const_expr_5() {
    test_const_expr("static RESULT:u8 (= RESULT (+ (+ 18 18) 219))");
}
#[test]
fn const_expr_6() {
    test_const_expr("static RESULT:u8 (= RESULT (- (- (- (- (+ 51 204) 0) (+ 0 (+ (+ 0 0) (- 116 (+ 19 (+ 13 84)))))) 0) (- (+ 16 17) 33)))");
}
#[test]
fn const_expr_7() {
    test_const_expr("static RESULT:u8 (= RESULT (+ (+ (- (- 146 (- (+ (+ (+ 1 (+ 1 1)) (- (- 156 (- 126 72)) (- 189 (- 225 122)))) 116) (+ 10 (+ 17 (- (- 252 (+ (- 246 (+ (+ (- (+ 159 (- 247 247)) (+ (+ 49 99) (- 120 120))) 24) (- 215 4))) (- 118 (- 171 54)))) 216))))) 10) 192) 0))");
}
#[test]
fn const_expr_8() {
    test_const_expr("static RESULT:u8 (= RESULT (+ (+ 21 21) 213))");
}
#[test]
fn const_expr_9() {
    test_const_expr("static RESULT:u8 (= RESULT (+ (+ (- (- (- (- (+ (+ 34 0) (+ (+ (- (+ 12 (+ (+ (+ (- (- 135 3) 132) 2) (+ (+ 0 (- 123 121)) 6)) 53)) 58) (+ (+ (+ 0 4) 25) 59)) 105)) 9) 0) 89) 128) 109) (+ (+ (+ (- 122 (+ 55 55)) (+ (+ 3 23) (- (- 109 12) 71))) 64) (- (- (- (- 235 19) 50) (- (- 250 (- (- 198 32) 131)) (- 159 (- 201 140)))) 49))))");
}
#[test]
fn const_expr_10() {
    test_const_expr("static RESULT:u8 (= RESULT (- (+ (- 79 16) 192) 0))");
}
#[test]
fn const_expr_11() {
    test_const_expr("static RESULT:u8 (= RESULT (+ 42 213))");
}
#[test]
fn const_expr_12() {
    test_const_expr("static RESULT:u8 (= RESULT (+ (- (+ (+ 7 32) 159) (- 173 (- 134 (+ (+ (- 86 84) 8) 22)))) (+ 25 (- (+ (- 144 (+ 25 100)) 116) (+ (- 105 (+ 49 50)) (+ 6 (+ (- (- (+ (+ (- 148 142) (+ (+ 3 15) (+ (- (- 221 132) (- 89 0)) 0))) 25) (+ 3 8)) (+ 7 (- 129 100))) (- 133 115))))))))");
}
#[test]
fn const_expr_13() {
    test_const_expr("static RESULT:u8 (= RESULT (- (- (- (+ (+ 7 44) (- (+ (+ (- (- (+ 124 (- 162 (+ 12 25))) (- (+ (+ 7 31) 0) 38)) (+ 111 111)) (+ 5 (- 140 (+ (+ 39 79) 0)))) (+ 27 (- 152 14))) (+ 7 (- (+ 64 129) (+ (- (- (+ 50 (- (- 251 (- 254 240)) 34)) 40) 152) (+ 17 (- 177 70))))))) 0) (+ (- 4 (- 160 (- (- 238 2) (+ 80 (+ 0 (+ 0 0)))))) 0)) 0))");
}
#[test]
fn const_expr_14() {
    test_const_expr("static RESULT:u8 (= RESULT (+ 51 (+ (+ 11 (- 49 (- (+ (+ (+ (+ (- (+ (- (- (+ 54 163) 22) 159) (+ (- (- (+ 46 184) 22) (- 218 28)) 19)) 73) (- 173 (- (+ (+ 5 24) (- 180 (+ 6 0))) (- (- (+ (- 165 (+ 16 68)) (- 249 86)) (- (- (- 245 13) 22) (- 217 16))) (+ 205 (+ (+ (+ 0 0) 0) (- 141 141))))))) 1) (- (+ 78 79) (- (+ (- 148 (- (- (+ 107 (+ (+ 15 93) 0)) 65) (- (+ (+ (- 80 74) 14) (+ (- 57 17) 40)) (- 214 144)))) (+ (- 202 167) (- (+ 19 115) 26))) 20))) 30) (- 243 (- (+ (- (+ (- (+ (+ (+ (+ 0 (+ 0 2)) 15) 34) 0) 4) 142) (- 195 (- 167 79))) (- (- (- 254 0) 1) (+ (- (- (- 249 0) 16) 204) 59))) 15))))) (- 244 74))))");
}
#[test]
fn const_expr_15() {
    test_const_expr("static RESULT:u8 (= RESULT (- (+ (+ 127 (- 184 56)) 0) 0))");
}
#[test]
fn const_expr_16() {
    test_const_expr("static RESULT:u8 (= RESULT (- (- (- (- (- (- (+ (- (- (+ 127 (- (+ (- (- (+ 28 (- 215 42)) (+ (+ 3 7) 42)) (+ 118 0)) 157) 60)) 0) 0) (- 206 (+ 206 (- (- (+ (+ 5 15) 0) 11) (- 240 (- 241 10)))))) (- (- (+ 33 (+ (+ 17 17) (+ 19 117))) 4) (- 248 49))) (+ 0 0)) (- (- (+ 59 178) (+ 1 (+ 0 3))) (- 234 (+ (+ 0 (- (+ (+ (+ 0 (- 175 (- (+ (+ 7 43) (- 232 29)) 79))) 6) 35) (- 120 (- 164 86)))) (- 213 212))))) 0) (- 27 27)) 0))");
}
#[test]
fn const_expr_17() {
    test_const_expr("static RESULT:u8 (= RESULT (- (+ 63 192) 0))");
}
#[test]
fn const_expr_18() {
    test_const_expr("static RESULT:u8 (= RESULT (+ 36 219))");
}
#[test]
fn const_expr_19() {
    test_const_expr("static RESULT:u8 (= RESULT (- (- (+ 63 (+ 192 0)) (+ (- (- (+ (+ (- 212 208) (+ 4 14)) 112) 20) 114) 0)) (- 154 (+ 51 103))))");
}
#[test]
fn const_expr_20() {
    test_const_expr("static RESULT:u8 (= RESULT (- (- (- (- (- (+ (- 67 (- (- 237 55) 178)) (+ (+ (- (+ (+ 6 (- (+ (+ (- (+ 9 40) (- 52 8)) (+ (- 215 211) 16)) (- (+ 39 197) 84)) (+ 25 125))) 199) 219) 14) (+ 41 (+ (+ 5 15) (+ (+ (- 160 (+ 79 (- 218 139))) (- 45 30)) 87))))) (- 145 145)) (+ (- (- (+ 189 0) 36) (- 195 (- (+ (- (+ 56 (+ (- 150 136) (- (- (+ (- 236 117) (+ 24 96)) 19) 178))) (- (- (- 241 17) 115) 19)) (+ 19 (+ 16 (- (+ 150 (- 25 25)) 52)))) 113))) (- (+ 116 (- (+ 35 141) (+ 30 (- (- 186 144) (+ (+ (+ 0 (+ 0 0)) (- 188 186)) 10))))) (+ (- 253 176) 155)))) (+ 0 0)) (+ (- (+ 43 172) (- (- 245 (+ (+ (+ 0 0) (- (- 193 4) 183)) 21)) 3)) 0)) 0))");
}
#[test]
fn const_expr_21() {
    test_const_expr("static RESULT:u8 (= RESULT (- (+ (- (- (+ 35 175) (- (+ (- 150 128) (+ (- 125 70) (- (+ 72 (+ (- (- (- 247 1) 1) (- 157 56)) (+ 0 (- 149 149)))) 160))) 113)) 148) (+ (+ 106 0) (+ (- 113 96) 90))) 0))");
}
#[test]
fn const_expr_22() {
    test_const_expr("static RESULT:u8 (= RESULT (+ 127 (+ (+ (- (- 244 (+ (+ 19 0) 0)) 161) 64) 0)))");
}
#[test]
fn const_expr_23() {
    test_const_expr("static RESULT:u8 (= RESULT (- (+ 85 170) (- (- (- 132 6) 97) 29)))");
}
#[test]
fn const_expr_24() {
    test_const_expr("static RESULT:u8 (= RESULT (- (+ 85 (+ (- (- (- (+ 34 208) (- (+ 44 180) (- 234 (- (+ (- (- 41 (- 39 18)) 3) (+ 34 (- 238 (+ 50 153)))) 25)))) (+ (- 179 (- (+ (+ (- (- 80 36) (- (+ (- (- 186 13) (- 92 10)) 0) 68)) (- 237 (+ (- 152 127) (+ (- 108 (+ 46 0)) 63)))) (+ 15 94)) 43)) (+ (+ 8 (- 72 56)) (- 24 24)))) (- 204 (+ 13 53))) (- 228 (+ 13 69)))) (+ (- 3 3) (+ 0 (+ 0 (- (- (+ (- 216 (+ 45 (+ (+ 4 (- 37 (- (- 136 12) (- (- (- 223 66) 23) 17)))) (+ (+ 26 78) (- 221 (+ (- 235 204) (- 191 (- 98 97)))))))) 134) (- (- (- 234 15) 25) (+ 17 (- (- (+ (+ (+ 58 (+ 0 (- 109 109))) 0) 174) 72) (- 156 (- (+ (+ 42 85) 127) 150)))))) (- (+ 44 132) 78)))))))");
}
#[test]
fn const_expr_25() {
    test_const_expr("static RESULT:u8 (= RESULT (- (- (- (+ 42 213) 0) (- (- (- (+ 59 178) 23) 18) 196)) 0))");
}
#[test]
fn const_expr_26() {
    test_const_expr("static RESULT:u8 (= RESULT (+ (+ 17 (+ 34 0)) 204))");
}
#[test]
fn const_expr_27() {
    test_const_expr("static RESULT:u8 (= RESULT (+ (+ 36 (+ (+ (+ (+ (+ (+ 1 0) (+ (- 22 22) (+ (+ (- 28 (+ 7 21)) 0) 0))) 7) 16) (+ (- (+ (+ (- 15 (- (+ 5 (- 62 29)) 26)) (+ 6 13)) 112) (+ (+ 9 9) (+ (+ (+ 3 6) (- (- (- (+ (+ (- (+ 15 47) 45) (- (+ 34 103) 29)) 126) 13) 104) (+ 53 (+ (- (- (- (+ 126 127) 2) 171) (+ 71 (+ (- 58 58) 0))) 45)))) (+ 73 0)))) 42)) 146)) (+ 0 (- 149 (- (+ 27 (+ (- 209 69) (- (+ (- 165 149) 81) (+ 97 (+ (+ 0 0) 0))))) (- 117 99))))))");
}
#[test]
fn const_expr_28() {
    test_const_expr("static RESULT:u8 (= RESULT (+ (+ (+ 1 5) 36) 213))");
}
#[test]
fn const_expr_29() {
    test_const_expr("static RESULT:u8 (= RESULT (+ (- 162 (- 222 187)) (+ (- (+ 122 122) 226) (+ (- 65 (+ (- 72 65) 43)) 95))))");
}
#[test]
fn const_expr_30() {
    test_const_expr("static RESULT:u8 (= RESULT (- (+ (- (+ (+ 10 33) (+ 18 (+ 16 96))) 88) 170) 0))");
}
#[test]
fn const_expr_31() {
    test_const_expr("static RESULT:u8 (= RESULT (- (+ (- 173 131) (+ 35 178)) (+ (+ 0 (- (- 139 (+ (- (- (+ 23 93) 80) 34) 13)) (- (+ (- (- (- (+ (- 138 (+ (- (+ 29 87) 103) (+ 0 0))) (- (- 217 61) (- (- (- 252 (+ 0 (+ 0 0))) 122) (- 151 52)))) (+ (- (+ 10 (+ 14 (- 123 (+ (+ 47 48) 0)))) 28) (- (+ 37 (- (- 154 (- 97 (- 16 5))) 31)) 24))) 9) 132) (+ 108 (- (- 224 76) (+ 8 (- 65 33))))) 127))) (- (- 254 (- 126 (+ (- (+ (- (+ 84 (- 188 18)) 194) 121) 103) (+ 0 (- 195 195))))) 206))))");
}
#[test]
fn const_expr_32() {
    test_const_expr("static RESULT:u8 (= RESULT (+ (- (+ 127 (- 205 77)) 0) (+ 0 0)))");
}
#[test]
fn const_expr_33() {
    test_const_expr("static RESULT:u8 (= RESULT (+ (- (- (+ 63 192) 0) 0) (+ 0 0)))");
}
#[test]
fn const_expr_34() {
    test_const_expr("static RESULT:u8 (= RESULT (+ 85 170))");
}
#[test]
fn const_expr_35() {
    test_const_expr("static RESULT:u8 (= RESULT (- (+ (+ (- 161 144) 68) (+ 34 (- 180 (- 59 (+ (- 161 (+ 22 (- 136 2))) (- 136 126)))))) 0))");
}
#[test]
fn const_expr_36() {
    test_const_expr("static RESULT:u8 (= RESULT (- (- (- (+ 42 (- 214 1)) 0) (- (+ (+ 15 0) 77) (+ (- (- (- (+ (+ 11 (+ 24 (+ (- 253 253) 0))) 178) 4) (- (- 122 20) 93)) (- (- 220 22) (- 198 (- 193 23)))) 62))) 0))");
}
#[test]
fn const_expr_37() {
    test_const_expr("static RESULT:u8 (= RESULT (- (- (+ 42 213) 0) 0))");
}
#[test]
fn const_expr_38() {
    test_const_expr("static RESULT:u8 (= RESULT (- (+ (- 50 14) (+ (- 173 137) 183)) 0))");
}
#[test]
fn const_expr_39() {
    test_const_expr("static RESULT:u8 (= RESULT (+ 42 (+ (+ (+ 35 (+ 0 0)) 36) (- (+ (+ 27 27) (- (+ (+ (- 35 31) 20) 97) (+ 3 8))) 22))))");
}
#[test]
fn const_expr_40() {
    test_const_expr("static RESULT:u8 (= RESULT (+ (- 254 127) 128))");
}
#[test]
fn const_expr_41() {
    test_const_expr("static RESULT:u8 (= RESULT (- (+ (- 145 (- 226 (- 139 (+ (+ (- (+ 165 (- (- (+ (- (- 249 (- (+ 16 80) 64)) 22) 0) (+ 86 (+ (+ 2 (- (+ 21 130) 141)) 75))) (+ 11 11))) 165) 2) 14)))) 213) (+ (- 201 201) 0)))");
}
#[test]
fn const_expr_42() {
    test_const_expr("static RESULT:u8 (= RESULT (+ (- (- (+ (+ (- 184 (- (+ 58 118) (- (+ 208 0) 188))) (+ (- 191 (- 199 (- 229 164))) 0)) 170) (- 193 (+ 193 (+ (+ (- (- (+ (+ 14 (- (- (+ (- 120 (+ 0 6)) 114) (+ (+ 6 12) (+ (- 51 30) 88))) (- 89 3))) 177) 174) (- 207 (- (- (- 251 (- 82 (+ (+ (+ 1 7) 24) (+ 8 (- 117 92))))) 1) (+ (+ 1 7) 50)))) (- 216 (+ (- 165 (- 220 85)) (- 250 (- 124 60))))) (- (- (- (- 231 19) (+ (- (+ 15 80) (- 151 61)) 36)) (+ (+ (- 244 239) 31) 111)) 24))))) 0) 0))");
}
#[test]
fn const_expr_43() {
    test_const_expr("static RESULT:u8 (= RESULT (+ (+ 85 0) (+ (+ (- (- (- 243 5) 85) 145) (+ (- 88 (+ (- (+ 157 0) 126) (+ 4 27))) 0)) 136)))");
}
#[test]
fn const_expr_44() {
    test_const_expr("static RESULT:u8 (= RESULT (- (+ 36 (+ (+ (+ 0 4) (- 171 144)) 188)) (- 254 (+ 50 (+ (+ (+ 5 (- 188 (- 254 (- (+ (- (- (+ 49 199) (- 244 (+ 6 (+ 6 6)))) 9) 65) 7)))) 30) 164)))))");
}
#[test]
fn const_expr_45() {
    test_const_expr("static RESULT:u8 (= RESULT (+ 127 128))");
}
#[test]
fn const_expr_46() {
    test_const_expr("static RESULT:u8 (= RESULT (- (- (+ 51 204) (- 195 (- 215 (- 104 84)))) 0))");
}
#[test]
fn const_expr_47() {
    test_const_expr("static RESULT:u8 (= RESULT (- (+ 51 204) (- (- (+ (+ (- (+ 15 (- 175 82)) 70) (+ 38 (- 243 243))) 152) (+ 6 19)) (- (+ 46 (- 236 (+ (+ 49 (+ (- 92 (- (- 253 9) (- 170 (+ (+ 9 (+ (+ (+ 3 0) (- 55 49)) 0)) 0)))) 0)) 0))) 30))))");
}
#[test]
fn const_expr_48() {
    test_const_expr("static RESULT:u8 (= RESULT (+ (- (- (- (- (- (+ 127 128) 0) (+ (+ 0 (- 27 27)) (- 174 (+ 58 (- 146 30))))) 0) (- 75 (+ 12 (+ (- 57 (- (- 252 23) 187)) (+ (- 118 110) (+ 6 (+ (- 104 (- (- (+ (- 253 (+ 15 15)) 0) (- 140 125)) 109)) (+ 4 (+ (+ (- 236 234) 4) 19))))))))) (+ 0 (- 150 (+ (+ (+ 5 (- 21 (- (- (+ (+ (+ (- 81 34) 48) (+ 23 (+ 14 (+ (- 126 115) (- 139 92))))) (+ 0 (+ 0 0))) 139) (+ (- (- (- (+ (+ (+ 41 0) 210) (+ 0 (+ 0 0))) (- 171 168)) 48) (+ (+ 65 0) 130)) (- (- (- 252 1) (- 202 170)) 189))))) (- (+ 34 (- (+ 75 150) 15)) (+ (+ 44 (- (+ (+ (+ 0 0) (- 19 (- (+ (+ 48 0) 144) (- (+ 78 158) 60)))) 15) 18)) 135))) 75)))) 0))");
}
#[test]
fn const_expr_49() {
    test_const_expr("static RESULT:u8 (= RESULT (+ (- 217 132) 170))");
}
#[test]
fn const_expr_50() {
    test_const_expr("static RESULT:u8 (= RESULT (- (+ (+ 63 192) (- 185 (- 215 (+ 6 (+ (+ (- (- (+ (- 65 42) 69) 13) (- (+ (- (- 204 (- (- (+ 16 96) (+ (- 179 170) 38)) 45)) 170) 74) (+ (- (- (- 230 (- 145 110)) 5) (- (+ 99 (+ 49 (- 163 113))) (+ (- 92 (- 142 (+ 10 41))) (- (- 130 31) (+ (- 201 156) (- 52 7)))))) (+ (+ 0 2) (+ (- (+ 12 0) (- (+ 2 10) 1)) 8))))) 20) (+ (+ (- 75 (+ 37 (+ (+ 1 (- (- (+ 14 (+ 17 53)) 28) 52)) 33))) 0) 0)))))) (+ (+ 0 (+ (- (- 139 (- 213 (+ (+ (+ 13 54) (- 238 (- (+ 23 95) 15))) (- 44 (- 52 8))))) (- 179 51)) 0)) (+ (- (- (- 230 (- (+ (- 88 (- 92 (+ 59 0))) (- 169 3)) (+ 203 0))) 1) (- (- 249 8) (- 116 (- 185 (+ (- (- 171 (- (+ (- 233 (- 221 8)) 104) 74)) 102) (- (- (+ (- 247 27) (+ (+ (- 166 (- 218 (+ 10 42))) (+ (+ 0 0) 0)) (- 150 150))) 19) 121)))))) 0))))");
}
#[test]
fn const_expr_51() {
    test_const_expr("static RESULT:u8 (= RESULT (- (- (- (- (+ (+ 85 0) (+ 28 142)) (+ 0 0)) 0) 0) (+ (- 21 21) 0)))");
}
#[test]
fn const_expr_52() {
    test_const_expr("static RESULT:u8 (= RESULT (+ (+ 42 (- 246 33)) (+ 0 (+ (- (- 208 (- 225 (+ (- (+ (+ 7 (+ (- 61 53) 0)) 94) 35) 0))) 57) (+ (+ 0 0) 0)))))");
}
#[test]
fn const_expr_53() {
    test_const_expr("static RESULT:u8 (= RESULT (+ (- (+ 63 192) 0) 0))");
}
#[test]
fn const_expr_54() {
    test_const_expr("static RESULT:u8 (= RESULT (- (+ (- 225 189) (+ 219 0)) 0))");
}
#[test]
fn const_expr_55() {
    test_const_expr("static RESULT:u8 (= RESULT (- (+ (- (+ 127 128) 0) (+ 0 0)) 0))");
}
#[test]
fn const_expr_56() {
    test_const_expr("static RESULT:u8 (= RESULT (+ 51 (- 226 22)))");
}
#[test]
fn const_expr_57() {
    test_const_expr("static RESULT:u8 (= RESULT (+ (+ 18 18) (- 231 (+ (- (- (- 219 73) (+ (- (- 249 (+ 3 13)) 186) (+ (+ 0 0) (- (- (+ 22 90) (- (+ 167 (+ 0 (+ 0 0))) 85)) (+ 7 (+ (+ (- 44 (- (- 244 (+ 6 (+ 2 4))) (- 241 42))) (+ (- (+ 44 (+ 59 (- 162 44))) (- 223 (- (- 162 28) 131))) (+ (- (+ (+ 4 4) 32) 37) 8))) (- 157 157))))))) 93) (- 47 (- 211 170))))))");
}
#[test]
fn const_expr_58() {
    test_const_expr("static RESULT:u8 (= RESULT (- (- (+ (+ (+ 1 (+ 1 5)) 35) 213) 0) 0))");
}
#[test]
fn const_expr_59() {
    test_const_expr("static RESULT:u8 (= RESULT (- (+ 51 204) (- 123 123)))");
}
#[test]
fn const_expr_60() {
    test_const_expr("static RESULT:u8 (= RESULT (- (- (+ (- (- (+ 63 190) (- 11 (+ 2 (+ 1 (+ 2 6))))) (- 152 (- 226 (- (- (- 247 (+ (+ (+ 0 (+ 0 0)) (+ 0 0)) (+ 0 (+ (+ 0 0) 0)))) (- 240 202)) (+ (+ (+ 0 1) 0) (- 157 149)))))) (- (- 246 7) 111)) (+ (+ (+ 0 0) (- (+ 15 93) 108)) 0)) 0))");
}
#[test]
fn const_expr_61() {
    test_const_expr("static RESULT:u8 (= RESULT (- (- (+ (+ (- (- (- 88 3) (- (+ 30 60) (+ (+ 5 6) (- 251 218)))) 3) 219) 0) (+ (+ (+ 0 0) (+ 0 0)) 0)) (+ (+ (- (- 251 (+ 0 (- (+ (+ (+ (- 183 (- 166 1)) 72) (- 178 (- (+ (+ 83 (+ 0 0)) (+ (+ 28 0) 56)) (- 116 (+ 6 (+ (- 73 (- 206 140)) (- 136 113))))))) 0) 180))) 250) (+ (- (- (+ 69 (+ 34 (- 178 143))) (+ 15 (- 134 40))) 29) (- (+ 47 (+ (+ 3 17) 121)) (+ 62 (+ 42 (- 242 158)))))) (+ 0 (- 149 (+ (- 155 6) (+ (+ (- 244 (+ (- 202 (+ 77 (- 92 (- 157 142)))) (+ 39 157))) 0) (- (- (- (+ (- 175 100) (+ (+ 3 (+ (- 35 28) 15)) (+ (- (- (- 254 3) (+ 2 11)) 228) 40))) 16) 1) 133))))))))");
}
#[test]
fn const_expr_62() {
    test_const_expr("static RESULT:u8 (= RESULT (+ (- 227 100) (- 211 83)))");
}
#[test]
fn const_expr_63() {
    test_const_expr("static RESULT:u8 (= RESULT (+ (+ 6 (+ 30 (- 218 218))) 219))");
}
#[test]
fn const_expr_64() {
    test_const_expr("static RESULT:u8 (= RESULT (- (- (- (- (- (- (- (+ (- (- (+ (+ 12 (- 140 79)) (- 190 42)) 0) (+ 15 (+ (- (- 242 2) (- (- (+ (- 116 81) 211) 21) 24)) 40))) (+ (- (+ (- (+ (+ (+ (+ 4 4) (- 78 78)) 53) 186) 50) (- (+ (- (- (+ 45 183) 132) (- 62 6)) (+ 20 21)) 81)) 69) (+ (- 19 19) 0))) (- (- (+ 50 202) (+ 21 (+ 8 36))) (+ (+ 15 (+ 2 (+ 2 (+ 1 11)))) 156))) (+ 0 (- 43 (- 193 150)))) 0) (- (+ 24 (- (- 231 (+ 12 61)) (- (+ (+ 190 0) (+ 0 0)) (- 159 (- 155 (- 120 (- (+ (- 10 (+ 0 1)) 49) (- (- (+ (+ 9 49) (+ 29 147)) 28) (+ (- 34 (- 246 245)) (- 213 (+ 13 67))))))))))) 98)) (- 43 43)) (+ (- 59 (+ (+ (+ (+ 0 3) (- (- 186 28) 147)) 0) 45)) (- 220 (- (+ (- (- 224 24) (+ (- 110 (- 185 112)) (+ 9 (+ 7 21)))) 127) 33)))) 0))");
}
#[test]
fn const_expr_65() {
    test_const_expr("static RESULT:u8 (= RESULT (- (- (+ (- 186 101) (- (- 241 (+ (- 175 (+ 143 (- 240 240))) (- 128 96))) 7)) (+ 0 (- (+ (+ 15 (+ (- (+ 61 0) 45) (+ 5 11))) (- (- 254 (- (- 252 (+ (+ (- (+ 26 (- (+ (+ 6 34) 164) 125)) 105) 3) 19)) (+ (+ (+ 9 (- (- (+ (- (- 224 14) 26) (+ 0 (- 166 166))) (+ (+ 1 (- 53 50)) 25)) 118)) (+ 0 0)) (- (+ 56 114) 30)))) (- 210 (+ (- 77 50) 164)))) (+ (+ 17 17) (+ 204 0))))) 0))");
}
#[test]
fn const_expr_66() {
    test_const_expr("static RESULT:u8 (= RESULT (+ 127 (- 206 78)))");
}
#[test]
fn const_expr_67() {
    test_const_expr("static RESULT:u8 (= RESULT (- (- (- (+ (- (- (- (+ 36 (+ (+ (- 106 (+ (+ 3 22) (+ (- (- (+ 100 101) (- 62 39)) 140) 38))) (- (- (+ (+ 21 21) (- 214 2)) (+ 0 (+ 1 (- (- 238 47) 191)))) 222)) (+ 30 153))) (+ (+ (- (- (+ 201 0) (+ 5 (+ (+ 0 5) (- 130 (+ (+ 33 0) 67))))) 161) (- (+ (- 55 13) 129) (- 184 13))) (+ (+ 0 (- (+ 24 (- 226 129)) 121)) 0))) (+ 0 0)) (- (- (- (- 229 54) 65) (+ (+ (- (+ (+ 0 (- 101 (- (+ (- 159 133) (- 169 88)) 8))) 13) 15) 0) 1)) (+ 54 (+ 55 0)))) (- 68 68)) (- 134 134)) 0) 0))");
}
#[test]
fn const_expr_68() {
    test_const_expr("static RESULT:u8 (= RESULT (+ 127 (+ (+ (- 129 (+ (- (+ (+ 10 54) 130) 174) 102)) 14) 107)))");
}
#[test]
fn const_expr_69() {
    test_const_expr("static RESULT:u8 (= RESULT (+ (- (- 166 (+ (- 72 (- 102 (+ 40 (- (- (- (+ (- 252 25) 0) 14) (+ (- 79 16) (- (- (+ 44 (- 229 53)) (- (+ (+ (+ 2 14) 17) 202) (- (- 251 (- 234 232)) (+ 15 (+ 15 16))))) 124))) 86)))) 10)) 61) 170))");
}
#[test]
fn const_expr_70() {
    test_const_expr("static RESULT:u8 (= RESULT (+ (+ (- 231 189) 213) (+ 0 (+ 0 (+ 0 0)))))");
}
#[test]
fn const_expr_71() {
    test_const_expr("static RESULT:u8 (= RESULT (+ 51 204))");
}
#[test]
fn const_expr_72() {
    test_const_expr("static RESULT:u8 (= RESULT (- (+ 42 213) 0))");
}
#[test]
fn const_expr_73() {
    test_const_expr("static RESULT:u8 (= RESULT (- (- (+ (+ 51 (- 205 1)) 0) 0) (+ (- 226 226) 0)))");
}
#[test]
fn const_expr_74() {
    test_const_expr("static RESULT:u8 (= RESULT (+ 36 219))");
}
#[test]
fn const_expr_75() {
    test_const_expr("static RESULT:u8 (= RESULT (+ (+ (- 197 134) (- 147 (- 140 (+ (- (+ (- (+ 46 186) (- (+ 217 (+ (- 135 (+ (+ 9 (- 183 (- 223 58))) (+ 15 93))) (+ (- (- (+ (- 172 140) 162) 112) 82) 0))) (- (- 252 (- (+ (- (+ (+ 3 18) (+ 66 0)) 67) (+ (- (+ 35 0) 27) 34)) (+ (- (+ (+ 16 0) 34) (- 186 (- 171 22))) 42))) (- (- 254 2) 8)))) (- (+ (+ (- (- 224 (+ (- (+ (+ 2 15) 54) (- (+ 59 119) 114)) (+ 3 (- 97 (+ 14 71))))) (+ (+ (- 32 24) 41) (+ (- 219 70) 0))) 17) 132) 52)) (- 232 (+ (- 44 (+ 26 0)) (+ (- 146 110) (+ (+ 24 0) (- (+ 30 154) (- (- (- (- 254 (- 149 148)) 0) 73) (- (- 240 (+ 13 (- 251 223))) (- 206 (+ 25 26)))))))))) (- 81 (+ (+ (- (- (- 247 33) (+ 9 0)) (- (- (- (+ (- (+ 77 (+ 11 67)) (+ 52 53)) (- 232 28)) 14) (+ (+ (- (+ 148 0) 147) 5) (+ 12 0))) 19)) (- (+ 9 40) 43)) 27)))))) (- (+ 65 (- 194 129)) (+ (- 222 (- 231 9)) (+ 2 0)))))");
}
#[test]
fn const_expr_76() {
    test_const_expr("static RESULT:u8 (= RESULT (+ 85 170))");
}
#[test]
fn const_expr_77() {
    test_const_expr("static RESULT:u8 (= RESULT (+ 42 213))");
}
#[test]
fn const_expr_78() {
    test_const_expr("static RESULT:u8 (= RESULT (+ (+ 25 (+ (+ (- (+ (+ (+ 6 7) (+ (- 133 (+ 21 110)) (- (- (- 194 46) 4) 132))) 137) 147) (+ (- 170 170) 0)) (- (- 235 72) 78))) (+ 25 103)))");
}
#[test]
fn const_expr_79() {
    test_const_expr("static RESULT:u8 (= RESULT (- (+ 36 219) (+ (- (- (- 243 6) (+ (- (+ 8 45) 16) (+ (- 151 114) 76))) 87) 0)))");
}
#[test]
fn const_expr_80() {
    test_const_expr("static RESULT:u8 (= RESULT (- (+ 36 (+ 36 183)) (- 109 (+ 36 73))))");
}
#[test]
fn const_expr_81() {
    test_const_expr("static RESULT:u8 (= RESULT (+ (- 185 149) 219))");
}
#[test]
fn const_expr_82() {
    test_const_expr("static RESULT:u8 (= RESULT (+ (+ 42 0) (- 222 (+ 4 (+ (+ (- (+ 22 (+ (- (+ 26 (+ (- (- (+ (- (- 249 57) (+ 16 50)) 126) (- 220 (+ 54 (+ 81 82)))) 118) 0)) 21) 0)) (- (- 233 1) 76)) (- (- (+ (+ 5 (- (+ 92 92) (+ (+ 7 44) (- (- 229 (- (- 236 37) (+ (+ 4 21) 156))) (+ 108 0))))) (+ (+ (+ (- 148 (- 232 (- (- (- 254 1) 40) 116))) 40) (+ (- 129 112) (- 216 180))) (- (+ 34 (- 237 (- 195 (+ (- 45 (+ 5 22)) (+ (- 254 217) 74))))) 99))) (- 181 (- (- 203 34) (- (- 251 4) 104)))) (- (- 217 (+ 116 0)) (+ 4 (+ (- 13 12) 4))))) 3)))))");
}
#[test]
fn const_expr_83() {
    test_const_expr("static RESULT:u8 (= RESULT (- (- (- (+ 63 192) 0) 0) 0))");
}
#[test]
fn const_expr_84() {
    test_const_expr("static RESULT:u8 (= RESULT (+ 51 (- 235 (- (- (+ 116 (+ (+ 2 (- (- 197 (- 15 (- (- (+ (+ (- 123 (- 221 112)) 15) 58) (+ (- (+ 127 0) (+ (- 252 242) (- 63 13))) (- 202 (+ (- 94 61) 169)))) (- 180 167)))) 175)) (- 202 (- 217 (- (- (+ (- (- 142 (- (- 250 0) 230)) (+ (- (- 154 40) 101) 67)) (- 226 (- 72 17))) (- (+ (+ 113 113) (- (- 220 11) 209)) 214)) (+ 28 (- (- (+ 42 210) 41) 153))))))) (- (- (- 211 4) 99) 59)) (- 178 (+ (+ 1 (+ 1 6)) 18))))))");
}
#[test]
fn const_expr_85() {
    test_const_expr("static RESULT:u8 (= RESULT (+ 85 170))");
}
#[test]
fn const_expr_86() {
    test_const_expr("static RESULT:u8 (= RESULT (+ 51 (- (+ (- 140 (- (+ (+ (- (+ (- 169 163) 37) 40) 15) 110) (- 214 195))) (- (- (+ (+ 82 0) 166) 14) (+ 9 38))) 14)))");
}
#[test]
fn const_expr_87() {
    test_const_expr("static RESULT:u8 (= RESULT (- (+ 36 (- 243 24)) 0))");
}
#[test]
fn const_expr_88() {
    test_const_expr("static RESULT:u8 (= RESULT (+ 51 (- 213 (- 59 (+ 8 (- 53 (- (- 122 (- 150 (- (+ 47 189) (+ 18 76)))) 103)))))))");
}
#[test]
fn const_expr_89() {
    test_const_expr("static RESULT:u8 (= RESULT (+ (+ 7 (- (+ (- (- 254 (+ (- 190 166) (+ 24 0))) 38) (- 193 193)) (+ (+ (+ 1 4) (- (+ 17 (+ (- 168 (+ (- (+ 207 (- 50 50)) (+ (- (+ 152 0) 112) (- 236 (- (- 253 36) 101)))) (- (- 228 (+ 5 6)) (- 155 (- (- (+ (+ 6 40) (+ 46 139)) (- 66 (+ 5 10))) 146))))) (- 190 (+ (- (+ 10 51) 38) (+ 35 (+ (+ (- 142 (+ (+ 5 20) 104)) (+ 1 12)) 80)))))) (- (- 152 20) (+ (+ (- 28 19) (+ 19 (+ 0 0))) (- (- 224 (- (+ 15 (+ 9 (+ 6 30))) 25)) 131))))) (- 150 38)))) (- 239 (- 43 (- (+ (+ 16 0) (- (- (+ 66 (- 161 94)) 7) 29)) 90)))))");
}
#[test]
fn const_expr_90() {
    test_const_expr("static RESULT:u8 (= RESULT (+ (- (- (- 246 (+ 0 2)) 10) 171) (- (+ (- (+ (+ 31 (- (+ 52 (+ (+ 4 (+ 13 14)) 128)) 148)) (+ 23 71)) (+ 51 (- 135 (+ (- (- 202 (- 68 (- (+ (- (+ (+ (+ 1 6) (- 65 41)) 128) (- 186 (+ (+ 8 0) (- 60 27)))) (- 96 22)) 64))) 142) (+ (+ (- 253 (+ 84 169)) (+ 1 (+ 0 (+ 0 2)))) 13))))) 206) (- 105 (- 229 (+ 172 0))))))");
}
#[test]
fn const_expr_91() {
    test_const_expr("static RESULT:u8 (= RESULT (+ (+ 7 (+ 5 (- (- (+ 24 (- 162 (- 148 (+ 11 (+ 0 (- 205 (+ (- (+ 29 (- (+ 47 48) 7)) (- 213 147)) (+ (+ (- (+ 93 93) (- 242 107)) (- 201 98)) (- (+ 28 (- 163 22)) (- (+ 57 115) 3)))))))))) (- (+ 52 (+ 17 (+ 35 0))) 89)) 4))) 213))");
}
#[test]
fn const_expr_92() {
    test_const_expr("static RESULT:u8 (= RESULT (- (- (+ (- 170 43) (+ 18 (- 206 (- (- 223 26) 101)))) (+ 0 (- 88 (- 106 (- (- 182 (+ (- 75 75) (+ (+ 0 0) 2))) (+ 27 135)))))) (+ (- (+ 66 (- 36 36)) (+ 13 (- (- 199 17) (+ (- (+ 15 76) (+ (+ 6 (+ 1 5)) 36)) 86)))) 0)))");
}
#[test]
fn const_expr_93() {
    test_const_expr("static RESULT:u8 (= RESULT (+ (- 237 174) 192))");
}
#[test]
fn const_expr_94() {
    test_const_expr("static RESULT:u8 (= RESULT (- (- (+ 42 213) 0) (- 148 (- 191 43))))");
}
#[test]
fn const_expr_95() {
    test_const_expr("static RESULT:u8 (= RESULT (+ 63 (+ (- (- (- (+ 60 182) 18) (+ (- (- 142 (+ 43 (+ (+ 0 0) 0))) 60) 40)) 97) 144)))");
}
#[test]
fn const_expr_96() {
    test_const_expr("static RESULT:u8 (= RESULT (- (+ (+ 6 30) (- (+ 235 (+ (- (- (- 204 (- (- 106 (+ 2 14)) 80)) 172) (- 205 (+ (- 225 (+ 22 112)) (+ 30 (- (+ 47 47) (+ (+ (+ 0 1) (+ 0 (+ (+ (- 21 21) (+ 0 0)) 4))) 27)))))) 0)) 16)) 0))");
}
#[test]
fn const_expr_97() {
    test_const_expr("static RESULT:u8 (= RESULT (- (- (+ 42 213) (- (- (- 253 (- 89 73)) (- 34 (+ 26 0))) 229)) 0))");
}
#[test]
fn const_expr_98() {
    test_const_expr("static RESULT:u8 (= RESULT (+ (+ 36 219) 0))");
}
#[test]
fn const_expr_99() {
    test_const_expr("static RESULT:u8 (= RESULT (- (+ (- (+ 51 (- 146 42)) (- (+ 44 133) 107)) 170) (- 154 (+ 38 (+ (+ (- (+ (- (+ (- (- (- 254 27) 4) 169) 55) 99) 30) 38) (- (- 205 56) 135)) (- 114 14))))))");
}
#[test]
fn const_expr_100() {
    test_const_expr("static RESULT:u8 (= RESULT (- (+ (- (+ (- 190 (+ 78 78)) (+ (+ 68 137) (+ (- (- 248 245) (- (+ (- 218 (- (- 251 17) 48)) (- (+ (- (- (+ (+ (+ 5 11) 16) 192) 101) (+ (+ (- 155 (- 241 86)) 4) 15)) (- (- 190 (- 79 (+ (- 80 71) (- 107 59)))) (+ (+ 7 (+ 4 (+ 3 7))) (- (- (- 200 26) 106) (- 219 (+ 96 97)))))) 44)) 194)) (- (- (- 253 (+ (- (+ 22 (- 119 (- 61 (- 246 (+ 47 143))))) 123) (- 79 (+ 12 26)))) (- 123 (- (+ (- (- 223 39) (+ (+ (+ 2 (- 169 163)) 52) (- 164 (+ (- 246 232) (+ 14 75))))) (+ 42 (+ 21 (- (+ (+ 14 14) (+ 57 58)) 79)))) (+ 33 100)))) 133)))) 197) (+ (+ (- (+ (- 128 (+ (+ 31 (- (- 246 (- (+ 19 (- (+ 28 169) (- 150 12))) (- 196 156))) 208)) 64)) 135) 97) 142) 0)) (- 91 (- 108 17))))");
}
#[test]
fn const_expr_101() {
    test_const_expr("static RESULT:u8 (= RESULT (- (- (- (- (+ 51 (+ 34 170)) (+ (- 189 (- (- (- 251 (+ (+ (- (- (- 248 124) (- 137 (- (+ 34 68) (+ 8 34)))) (+ 23 24)) (- (+ 11 (+ 6 (- 218 (+ 59 120)))) (+ (+ (- (+ 13 55) 61) (+ 3 4)) (+ (- (- 228 7) (- 226 26)) (+ (- 146 125) 0))))) 0)) (+ (- 31 31) (- 166 (+ (- (- (- (+ 248 0) (+ 0 (- 55 53))) (+ 18 38)) (- 232 65)) 143)))) (+ (- 41 (- (- (+ (+ 6 (+ 9 18)) (- 176 40)) (- 115 77)) (+ (- (- (- (+ 47 189) (+ 4 (- 15 3))) (+ (- 163 148) 75)) (- 221 (- (+ (+ 7 24) (+ 32 96)) 42))) (- 182 103)))) (- 87 (- (+ (+ 3 (+ 4 (+ 3 14))) (+ (- 62 57) (- 40 (- (- (+ 87 0) (- 218 157)) 6)))) (+ 1 8)))))) 0)) 0) (- (+ (+ 3 4) (- (- 204 3) (+ 154 (+ (+ (- (+ (- (+ (+ (+ (- 51 51) (- (+ 9 20) 28)) 4) (+ 3 (- (- (- 242 29) 67) 126))) (- 215 (- 225 38))) (- (- 242 10) 229)) 3) 0) 0)))) (- 181 127))) (- (+ (+ 6 0) 36) (- (- (+ (+ 44 (+ (- 197 (+ (+ (+ 5 5) (+ (+ (+ 1 4) 6) (- (- 102 (- (+ (- 157 100) 115) (- 247 115))) (+ (- 243 (+ 235 0)) (+ 43 (+ (+ 0 0) 0)))))) 165)) (+ (+ 0 0) (- 212 (- (- (+ 251 0) 1) (+ 5 (+ 4 29))))))) 133) (- (+ 32 165) (- (+ (+ 8 (- 131 95)) (- (+ (- 252 60) (+ 0 0)) 14)) (- (- (+ (- 79 (- (- (- 236 (- 220 218)) (- (- (+ 61 (- 193 10)) (+ 2 17)) 213)) (+ 25 (+ (+ (- 95 (+ 2 18)) (+ 0 0)) (+ (- (+ 36 145) (+ 106 0)) (+ 0 (+ 0 0))))))) 198) 42) 154)))) 126))))");
}
#[test]
fn const_expr_102() {
    test_const_expr("static RESULT:u8 (= RESULT (+ 36 (- 242 23)))");
}
#[test]
fn const_expr_103() {
    test_const_expr("static RESULT:u8 (= RESULT (+ (- (+ (- 203 141) 125) 60) 128))");
}
#[test]
fn const_expr_104() {
    test_const_expr("static RESULT:u8 (= RESULT (+ 127 128))");
}
#[test]
fn const_expr_105() {
    test_const_expr("static RESULT:u8 (= RESULT (+ 127 128))");
}
#[test]
fn const_expr_106() {
    test_const_expr("static RESULT:u8 (= RESULT (+ 36 219))");
}
#[test]
fn const_expr_107() {
    test_const_expr("static RESULT:u8 (= RESULT (- (+ (+ (- (+ 65 131) (+ (+ (+ 19 (- 162 (- (- 236 4) 89))) 39) 77)) 213) 0) 0))");
}
#[test]
fn const_expr_108() {
    test_const_expr("static RESULT:u8 (= RESULT (+ (- 244 181) (+ 38 154)))");
}
#[test]
fn const_expr_109() {
    test_const_expr("static RESULT:u8 (= RESULT (- (+ 36 219) (+ (+ 0 0) 0)))");
}
#[test]
fn const_expr_110() {
    test_const_expr("static RESULT:u8 (= RESULT (- (- (- (+ 36 219) 0) (+ (- (- 164 48) (- 129 13)) (- 139 139))) (- 204 (+ 204 0))))");
}
#[test]
fn const_expr_111() {
    test_const_expr("static RESULT:u8 (= RESULT (+ (+ 42 (+ 30 (- 247 64))) (+ 0 0)))");
}
#[test]
fn const_expr_112() {
    test_const_expr("static RESULT:u8 (= RESULT (+ (- (- (- (- (- (+ (- (+ 125 0) (- (+ 77 (- 186 31)) 191)) (+ 34 136)) (- 113 (+ (+ 5 (- 246 (- 235 0))) (+ 24 (+ (- 204 (+ 43 88)) 0))))) 0) (+ 0 0)) (- (+ 1 (- (- (+ 57 (- (+ 88 88) 5)) (- (+ 15 61) (- (- (+ 29 (+ 30 (- 202 (+ (+ (- 91 82) 18) 55)))) 108) (- (- (+ (- (+ 55 (- (- 252 2) (- 184 99))) (+ (- 99 31) (+ (+ 4 18) (+ 15 31)))) 170) 23) (+ 66 133))))) (+ (+ 15 46) (+ 122 (- (+ 14 57) (+ (+ 17 0) 54)))))) (- 36 29))) (+ 210 0)) (+ 35 (- 250 72))))");
}
#[test]
fn const_expr_113() {
    test_const_expr("static RESULT:u8 (= RESULT (- (+ (- (- (+ (+ 27 28) (- 209 (- (+ 50 (+ 50 100)) (- 234 (+ (- (- 242 (+ 13 (- (- (- (- 253 0) (+ 0 4)) 23) (+ (+ (- 161 148) (+ 7 46)) 134)))) (- (- (+ 38 195) (+ 6 (- 47 35))) (+ 4 (- 169 143)))) 57))))) 61) 35) 128) 0))");
}
#[test]
fn const_expr_114() {
    test_const_expr("static RESULT:u8 (= RESULT (+ 63 (+ (+ 7 31) (- (+ 28 (- (+ (+ 10 (- (- (- (- 216 5) (- 123 108)) (- 105 4)) (+ (- 37 15) 22))) (+ (- (+ (+ (- 122 (- 173 57)) (+ (+ (+ 0 0) 4) 10)) (- (- 171 (+ 9 40)) 22)) 74) (+ 23 (- (+ 18 108) 9)))) 79)) 42))))");
}
#[test]
fn const_expr_115() {
    test_const_expr("static RESULT:u8 (= RESULT (- (+ (- (- (+ (- 182 140) (- (+ 33 198) (- 172 154))) (- (- (+ 253 (+ 0 0)) (+ 0 0)) (+ 253 0))) (+ 0 0)) (+ (+ (- (- 167 98) (- (- 178 42) 67)) (- 63 (- 148 85))) 0)) (+ (+ 0 (+ (- 154 (- (+ 87 88) 21)) (+ (- 165 165) (- 35 (- (- 254 2) (+ (- (- (- 234 (- 94 85)) (- 55 44)) 178) 181)))))) (- 240 240))))");
}
#[test]
fn const_expr_116() {
    test_const_expr("static RESULT:u8 (= RESULT (+ (+ (+ 14 0) (- 250 179)) 170))");
}
#[test]
fn const_expr_117() {
    test_const_expr("static RESULT:u8 (= RESULT (- (- (+ 51 (- 234 30)) 0) 0))");
}
#[test]
fn const_expr_118() {
    test_const_expr("static RESULT:u8 (= RESULT (+ (- (+ (+ (+ (+ 2 3) 31) 219) (+ 0 (- 145 145))) (- 82 82)) (+ 0 (+ 0 0))))");
}
#[test]
fn const_expr_119() {
    test_const_expr("static RESULT:u8 (= RESULT (+ 85 170))");
}
#[test]
fn const_expr_120() {
    test_const_expr("static RESULT:u8 (= RESULT (+ (+ 7 29) 219))");
}
#[test]
fn const_expr_121() {
    test_const_expr("static RESULT:u8 (= RESULT (+ 51 (- 237 33)))");
}
#[test]
fn const_expr_122() {
    test_const_expr("static RESULT:u8 (= RESULT (- (+ (- 101 (+ 8 (+ (- 216 (- 227 (- 199 163))) 26))) (+ (+ (- 33 7) (- 216 136)) 107)) (- 195 (- (+ 40 (+ (- 148 119) 175)) 49))))");
}
#[test]
fn const_expr_123() {
    test_const_expr("static RESULT:u8 (= RESULT (+ (+ (- (- (+ (+ 14 (+ 21 (- 186 164))) (+ (- 83 (- (+ 83 84) 118)) (- 242 (- (- (- (+ 35 (- 206 28)) (- (+ 79 (- (- 176 122) 54)) 65)) 22) (- (+ 20 (- 134 51)) 28))))) (+ (+ 144 (- 98 98)) 0)) 70) (- 68 34)) 204))");
}
#[test]
fn const_expr_124() {
    test_const_expr("static RESULT:u8 (= RESULT (- (+ (- (- (+ (- 156 (- (+ 44 (- (- 209 (- (+ (+ 31 (- 210 (- (+ 17 85) (- 170 88)))) 0) (+ (+ (- (+ 90 90) 120) 121) (- (- (- (+ 83 166) (- 63 57)) (+ (+ 30 31) (- 219 95))) 58)))) (+ (+ 3 (- 233 220)) 65))) 27)) 204) 0) (- 153 153)) 0) 0))");
}
#[test]
fn const_expr_125() {
    test_const_expr("static RESULT:u8 (= RESULT (+ 63 192))");
}
#[test]
fn const_expr_126() {
    test_const_expr("static RESULT:u8 (= RESULT (- (+ 51 204) (- 81 81)))");
}
#[test]
fn const_expr_127() {
    test_const_expr("static RESULT:u8 (= RESULT (+ (- 80 (+ 11 33)) 219))");
}
#[test]
fn const_expr_128() {
    test_const_expr("static RESULT:u8 (= RESULT (+ (+ (+ (- 254 (- (- (+ 127 127) (+ (- 205 205) 2)) 2)) (+ 4 13)) 64) (+ (- (+ 78 157) (+ (- 181 165) 49)) 0)))");
}
#[test]
fn const_expr_129() {
    test_const_expr("static RESULT:u8 (= RESULT (+ (+ 18 (- 96 (+ (- 60 (+ 11 (- (- (- (- (+ 245 (- (+ 6 30) 36)) 3) 13) (- (+ (- (- 105 (- (+ 25 102) (+ 14 (- 103 (- 178 160))))) (- 61 38)) 162) 105)) (+ (- 151 (- 121 (+ (- (+ (- (+ 53 (+ 15 92)) (+ (- 84 66) 113)) (+ (- (+ 120 0) (+ 13 78)) (+ (- 85 71) 74))) 145) (- (- (- 254 0) 4) 240)))) 41)))) (+ (- (- 145 41) 39) (+ 0 0))))) (+ 109 (- 235 (+ (+ 125 0) 0)))))");
}
#[test]
fn const_expr_130() {
    test_const_expr("static RESULT:u8 (= RESULT (- (+ 63 192) (- (- 84 (- 214 196)) 66)))");
}
#[test]
fn const_expr_131() {
    test_const_expr("static RESULT:u8 (= RESULT (- (- (- (- (+ (- 64 (+ 4 9)) 204) 0) 0) (- 209 209)) 0))");
}
#[test]
fn const_expr_132() {
    test_const_expr("static RESULT:u8 (= RESULT (- (+ (+ (+ (- 109 107) (+ (- 3 (+ (- 7 (+ 1 6)) (+ 0 1))) 8)) 73) (- (+ (+ (+ 47 (- 241 (- 231 (- (+ 81 (- 213 (+ 9 (+ 8 32)))) 208)))) (+ 23 71)) (+ 0 0)) 18)) 0))");
}
#[test]
fn const_expr_133() {
    test_const_expr("static RESULT:u8 (= RESULT (+ 127 128))");
}
#[test]
fn const_expr_134() {
    test_const_expr("static RESULT:u8 (= RESULT (- (- (+ (+ 8 (+ 10 33)) (- 233 29)) 0) 0))");
}
#[test]
fn const_expr_135() {
    test_const_expr("static RESULT:u8 (= RESULT (+ (+ 10 (+ (- 140 136) 28)) 213))");
}
#[test]
fn const_expr_136() {
    test_const_expr("static RESULT:u8 (= RESULT (+ (+ 17 68) 170))");
}
#[test]
fn const_expr_137() {
    test_const_expr("static RESULT:u8 (= RESULT (+ (+ (- (+ 42 (+ (+ (+ (+ (+ 0 (+ 0 3)) 4) 0) (+ (- (- (- (+ 251 0) (+ 4 (+ (- (- 204 30) (- 192 34)) (- (- 218 (+ (- 241 238) (- 98 88))) 205)))) (- (- (+ 254 (+ 0 0)) 23) (+ (+ (+ 2 (- 87 79)) (- 82 (+ (+ (- 192 189) (+ 2 5)) (+ 12 50)))) (- 220 (- (- 207 8) 61))))) 87) 31)) (- 173 13))) (- 229 (+ 45 (- 247 63)))) (+ (- (- (+ (+ 16 (+ (- (- (+ 27 (+ 45 91)) 53) 44) 0)) (+ (+ 41 0) (+ 62 (+ (+ 1 8) (+ (- 42 24) 36))))) (- 119 (+ (+ (+ 7 (+ (- (+ (- 243 (+ (- (+ 48 0) (- 53 49)) 180)) 59) (- (+ (+ (+ (- 3 1) 11) (- (- 238 45) 166)) 202) (- 238 (- 93 20)))) 7)) 0) (- (- (- 253 27) (- 181 (- 53 (+ (- 93 67) (- 250 (- (+ 42 (+ 35 175)) (+ 0 2))))))) 24)))) (+ (+ (- (+ (- 77 58) (+ 5 33)) (- 190 140)) 31) 154)) (- 121 (+ 30 91)))) 0))");
}
#[test]
fn const_expr_138() {
    test_const_expr("static RESULT:u8 (= RESULT (+ 85 170))");
}
#[test]
fn const_expr_139() {
    test_const_expr("static RESULT:u8 (= RESULT (+ (+ (+ 10 (- (+ 7 (- (+ 87 (+ (+ 5 12) 70)) 127)) 1)) 0) (+ 32 (- 182 22))))");
}
#[test]
fn const_expr_140() {
    test_const_expr("static RESULT:u8 (= RESULT (+ (- 133 6) (+ 42 (+ (- 17 0) (- (+ 24 (- (- 220 7) (- (+ (- (- 128 48) (+ 19 38)) (+ 143 (- 35 35))) (+ 5 (+ (+ 0 (- 45 (- 206 (+ 27 139)))) 15))))) (+ (+ 4 (+ 5 0)) 18))))))");
}
#[test]
fn const_expr_141() {
    test_const_expr("static RESULT:u8 (= RESULT (+ (+ (- 60 (- 177 (+ (+ 11 58) (+ (+ (- (+ (+ 56 113) (- 98 98)) (- (+ (+ 7 (+ (- (+ 34 34) 45) (+ 0 0))) 155) (- (+ 44 (- 100 (+ 2 (+ (- 93 91) (- (- 42 10) (- 198 174)))))) (- (+ 50 200) (+ 33 170))))) 0) (- (- (+ 154 0) 4) 150))))) 106) 128))");
}
#[test]
fn const_expr_142() {
    test_const_expr("static RESULT:u8 (= RESULT (- (+ 36 219) (- 237 (+ (+ (+ (+ 1 (- 243 (+ (- 147 (- (- (+ (- (- (- (+ 76 154) 26) 41) 58) (- (- (+ 21 (- 182 52)) 7) (- 100 62))) (+ 9 27)) 107)) (- (+ (+ 14 (+ (+ 5 (- (- 216 (- 147 107)) (- 227 (- 230 174)))) 50)) 150) (+ 10 (- (+ 50 (- (- (- (+ 127 127) (- 37 34)) 13) 36)) 198)))))) 28) (+ 204 0)) 0))))");
}
#[test]
fn const_expr_143() {
    test_const_expr("static RESULT:u8 (= RESULT (- (+ 51 (- 238 34)) 0))");
}
#[test]
fn const_expr_144() {
    test_const_expr("static RESULT:u8 (= RESULT (+ (+ (- 94 (- 88 6)) 51) 192))");
}
#[test]
fn const_expr_145() {
    test_const_expr("static RESULT:u8 (= RESULT (- (+ (+ (- 228 101) 0) (+ (+ 16 (+ (+ (- (+ (- 253 233) 81) (- 123 (+ (- (- 230 0) (- (+ 41 208) (- (+ (- 54 (- 178 166)) (+ (- 235 (+ 27 166)) 128)) (- (- 241 (+ 4 (+ 2 15))) 33)))) (+ 2 (+ (- 248 (+ (- (+ 43 174) (+ (+ 3 12) 80)) 123)) 13))))) (- 251 (- 241 (+ 4 0)))) 32)) (+ (+ 2 7) (+ 18 37)))) (+ 0 (+ 0 0))))");
}
#[test]
fn const_expr_146() {
    test_const_expr("static RESULT:u8 (= RESULT (+ (+ 12 73) 170))");
}
#[test]
fn const_expr_147() {
    test_const_expr("static RESULT:u8 (= RESULT (- (+ (- (- 243 (- 225 219)) (+ 22 (+ 12 76))) 128) (+ 0 0)))");
}
#[test]
fn const_expr_148() {
    test_const_expr("static RESULT:u8 (= RESULT (- (- (- (+ 127 128) 0) 0) (- 85 85)))");
}
#[test]
fn const_expr_149() {
    test_const_expr("static RESULT:u8 (= RESULT (+ (- (+ (+ (+ 2 13) 61) (+ (- (+ (+ (- (+ (+ (+ (+ (+ (+ (+ (- 179 179) (- 51 51)) (+ 0 (+ 0 0))) (+ 0 1)) (+ 1 (- 195 (- (+ 36 180) (- 182 156))))) 16) 141) 0) 159) 28) 199) (+ (+ 7 47) 163)) 62)) 68) (- 228 58)))");
}
#[test]
fn const_expr_150() {
    test_const_expr("static RESULT:u8 (= RESULT (+ (- (+ 69 69) (- 86 (- 78 45))) 170))");
}
#[test]
fn const_expr_151() {
    test_const_expr("static RESULT:u8 (= RESULT (- (+ 36 219) (+ (- (+ 72 (+ (+ (+ 2 10) (+ (+ (- 28 26) (- 63 (+ (- 139 (- 84 (+ (+ 0 0) 2))) (- 105 (- 230 (- 161 (+ 18 (- (+ 14 28) (- 106 82))))))))) 16)) (+ 27 (- 247 (+ 82 (+ 20 63)))))) 217) (- (+ (- 222 221) (- (+ (+ 2 (+ 0 (- (- (+ (+ (+ (- (- 249 12) 221) 0) (- (+ 107 (+ 26 81)) 197)) (- 189 20)) (+ (- (- (+ 103 (- (+ 253 0) 150)) 32) 26) 0)) (+ 17 34)))) 25) (- 53 29))) (+ (- 201 (- (+ 112 (+ 28 84)) 30)) (- (- 147 12) 135))))))");
}
#[test]
fn const_expr_152() {
    test_const_expr("static RESULT:u8 (= RESULT (+ 42 (+ (+ (+ 35 (- (- 236 197) (+ 0 3))) (- 239 (+ 24 (+ (- 49 13) (+ (+ (- 184 (- 232 (+ 9 (+ 19 (- (+ 31 32) 43))))) 5) 32))))) (- 74 74))))");
}
#[test]
fn const_expr_153() {
    test_const_expr("static RESULT:u8 (= RESULT (+ 85 170))");
}
#[test]
fn const_expr_154() {
    test_const_expr("static RESULT:u8 (= RESULT (- (- (+ 85 (+ 170 (+ 0 0))) 0) 0))");
}
#[test]
fn const_expr_155() {
    test_const_expr("static RESULT:u8 (= RESULT (- (- (- (- (+ (- (- (- 253 (+ 0 (- 120 117))) (- 39 35)) (+ 105 105)) (- (- (- 234 13) (- 32 30)) 0)) 0) (- 86 86)) 0) (+ (+ (- 248 248) (- (+ 70 71) (- (- 212 40) (- 184 153)))) 0)))");
}
#[test]
fn const_expr_156() {
    test_const_expr("static RESULT:u8 (= RESULT (+ (- (- (+ 36 (- 221 2)) 0) (- (- 166 112) (+ 10 44))) 0))");
}
#[test]
fn const_expr_157() {
    test_const_expr("static RESULT:u8 (= RESULT (+ 85 (+ (+ 14 (- (+ (+ (+ (- (- (- (- (- (+ 39 198) (- (- (- (- 243 41) (+ 29 29)) (+ (- 61 60) 5)) (- 208 (+ (+ 10 10) (+ 11 69))))) (+ 40 0)) (- 149 72)) 66) 22) 9) (- 236 191)) 113) (+ (+ 77 (+ (- (+ 33 33) 66) (+ (- 4 4) 0))) (+ 19 59)))) 142)))");
}
#[test]
fn const_expr_158() {
    test_const_expr("static RESULT:u8 (= RESULT (- (+ (- (- 190 41) 86) (+ (+ 6 42) (+ 72 72))) 0))");
}
#[test]
fn const_expr_159() {
    test_const_expr("static RESULT:u8 (= RESULT (+ 42 213))");
}
#[test]
fn const_expr_160() {
    test_const_expr("static RESULT:u8 (= RESULT (- (- (- (+ (+ (- (- 147 (+ (+ 29 (- (+ (+ 21 (+ (+ 1 6) (- (+ 20 (+ 40 40)) (- 70 (+ 5 0))))) 64) 97)) 0)) 73) 48) (+ (+ (- 211 187) 72) (- (- (+ (+ 38 38) (+ 12 64)) 8) (- (+ 31 (+ 41 83)) (+ 21 86))))) (- (+ 2 (+ 4 8)) (+ 3 11))) 0) 0))");
}
#[test]
fn const_expr_161() {
    test_const_expr("static RESULT:u8 (= RESULT (- (+ (- 186 (+ (+ (- 25 19) (- (+ 72 145) 199)) (+ (+ 16 17) 66))) 192) (+ 0 (- 102 102))))");
}
#[test]
fn const_expr_162() {
    test_const_expr("static RESULT:u8 (= RESULT (- (- (+ 42 (- (- (- (- 254 (- 157 156)) (+ (- (- 225 (+ 7 (- (+ (- 222 (- 223 (- (+ 155 0) (+ 28 112)))) (- (- (+ 31 (- 164 70)) (- (+ 43 43) 77)) (+ (+ (- 85 78) (+ 39 0)) (- 229 (- 248 19))))) 45))) (- (+ 33 (- 233 (- 187 121))) (- (- 213 98) (- (+ (- (- (- 175 (- 97 80)) (+ (+ 7 15) 91)) (+ (+ (+ 0 1) 5) 6)) 99) 48)))) 11)) 5) 14)) (- (- 231 15) (- (+ (- 164 91) 147) (+ (- (+ 48 (+ 38 (+ 22 (- (+ (- 234 (+ (+ (- (- 251 84) 147) (+ (+ 2 8) 10)) (+ (+ 40 41) 82))) (+ (- 243 (+ (- (+ 244 0) (- 242 30)) 132)) 80)) 56)))) (+ (- (+ 123 124) 5) (- (+ (- 214 (+ 142 (+ (+ 0 0) 0))) 72) (- (+ 41 123) 20)))) (+ 2 (+ 0 (- (- (- (- (+ 35 (- 254 38)) (+ 0 (- 118 118))) (- 85 79)) 71) (+ (- 68 (- 251 (- (+ (+ (- (- 143 99) 4) (- 151 151)) (- (+ 219 0) 16)) (- 74 48)))) (+ 46 (+ (+ 4 (- (- (+ 37 (- 248 63)) (- (- 246 11) (- 151 65))) (+ (+ 12 52) 0))) (- 190 111))))))))))) 0))");
}
#[test]
fn const_expr_163() {
    test_const_expr("static RESULT:u8 (= RESULT (+ (+ 31 96) (+ (- (+ 40 (- (- (- 183 (+ (+ (- (+ 22 114) 136) (- (- 218 103) (- 254 (- (+ (+ 17 17) 174) (+ (+ 1 (+ (- 203 200) (+ 1 6))) (+ (+ 58 (+ 0 0)) (- (+ 12 12) 24))))))) (+ 1 1))) (- (+ (+ (+ 3 (- 93 (- (- (+ 125 125) (+ (- 224 (+ 27 139)) 59)) 48))) (- (- (- (+ 32 163) (- (+ (- (- 228 41) 66) (+ 61 61)) (+ 33 (+ (+ 22 44) 66)))) 5) 101)) (- (- (- 246 0) (- (- 191 116) (- 92 64))) (- (- 110 23) 0))) (+ (+ (+ 0 2) 14) 82))) (- (+ 8 50) (+ (+ 2 (+ (+ 0 3) (+ (- (+ 51 (- (+ 49 (+ 24 123)) 145)) 101) 5))) 22)))) 128) 96)))");
}
#[test]
fn const_expr_164() {
    test_const_expr("static RESULT:u8 (= RESULT (- (- (- (+ 36 219) (+ 0 0)) (- 162 (- 218 (+ (+ 1 (+ 3 4)) (- (- (+ (+ (+ (- (- (+ (+ (- 3 0) (+ 18 0)) 132) 2) 140) 0) 23) (+ (- (+ 12 (+ 74 (+ 0 (- 247 247)))) 34) 158)) 167) 29))))) (+ (- (+ 30 31) 61) (- (+ (+ (+ (+ (- (- 110 29) (- 241 165)) 12) (- (+ (- 242 26) 0) (+ 164 0))) 140) 0) 209))))");
}
#[test]
fn const_expr_165() {
    test_const_expr("static RESULT:u8 (= RESULT (- (+ 51 204) 0))");
}
#[test]
fn const_expr_166() {
    test_const_expr("static RESULT:u8 (= RESULT (+ (+ (- 196 69) 0) (- 164 36)))");
}
#[test]
fn const_expr_167() {
    test_const_expr("static RESULT:u8 (= RESULT (+ (- (+ 33 199) (+ (+ (- 109 (+ (+ 34 0) (+ (- 210 (+ 38 155)) 51))) 14) (+ (+ (+ (+ (+ 2 (+ 0 (+ 0 (+ (- (+ 50 (+ 30 (- 142 (- 77 55)))) (+ (+ 28 172) 0)) (- 46 44))))) (- 56 (+ 56 (+ (+ (+ (+ 0 (- 223 (- 241 (- 122 104)))) (- 218 (- (+ (+ 57 57) (- 204 89)) (+ (+ 1 2) (- 141 133))))) 0) 0)))) 10) (- 121 (- 162 (+ (- 75 (+ (+ 2 (- 181 (+ (+ 23 0) (- (+ 40 (- 220 18)) (+ (- 226 192) (- 203 135)))))) 42)) (+ (- 108 90) 38))))) (- (- 249 (+ (- (+ (- (+ (+ (- 135 (- 144 12)) (- (+ 2 (- 114 (- 172 71))) 5)) 65) (+ (+ 1 (+ (+ (+ (- 40 40) (- 127 127)) 1) 5)) (- 251 (+ 223 0)))) 129) 160) (- 40 15))) (- (+ (+ (- 166 160) 42) 144) (- (+ (- (- 193 (+ (- (+ (- (- (- 253 0) 0) (- 216 20)) (+ 38 (+ 15 (+ 63 0)))) (+ 28 (- 204 61))) (+ 1 4))) (+ 145 (+ 0 0))) (- 200 32)) 187)))))) 128))");
}
#[test]
fn const_expr_168() {
    test_const_expr("static RESULT:u8 (= RESULT (- (+ (- (+ (- (- 92 19) 11) (- (- (+ 80 (- 239 77)) (+ 7 (+ 11 33))) (+ (+ 11 56) 0))) (+ (- 188 (- (+ (- (- 254 0) (- (+ (+ 4 (- (- (+ 38 194) (+ 71 (+ 28 116))) (- (- (+ (+ 6 25) (- 166 72)) (+ (+ 3 18) (+ 7 14))) (+ (+ (+ 1 2) 11) 57)))) 39) 8)) 0) 98)) 72)) 213) (+ 0 (+ (- (+ 7 36) 43) 0))))");
}
#[test]
fn const_expr_169() {
    test_const_expr("static RESULT:u8 (= RESULT (+ (+ 85 170) 0))");
}
#[test]
fn const_expr_170() {
    test_const_expr("static RESULT:u8 (= RESULT (- (- (+ 63 192) (+ (+ 0 0) 0)) (+ (+ 0 0) 0)))");
}
#[test]
fn const_expr_171() {
    test_const_expr("static RESULT:u8 (= RESULT (+ 42 213))");
}
#[test]
fn const_expr_172() {
    test_const_expr("static RESULT:u8 (= RESULT (+ 42 213))");
}
#[test]
fn const_expr_173() {
    test_const_expr("static RESULT:u8 (= RESULT (+ (+ 15 (+ (- 171 159) 36)) 192))");
}
#[test]
fn const_expr_174() {
    test_const_expr("static RESULT:u8 (= RESULT (+ (- (+ (- 244 (+ 48 145)) 204) 0) (- 62 (+ (+ (+ (- (+ 18 56) (+ (+ (+ (- (+ (- 61 (- (+ (+ 6 33) (+ 9 (+ 5 25))) 25)) 25) (+ (+ (- (- 125 (- 78 (- 166 116))) 96) (- (- (- 225 (- 73 68)) (+ 6 27)) 184)) (- (- 215 (+ (+ 8 (- 249 232)) (+ 10 (- 169 127)))) (- (- (+ 41 (- 231 23)) 26) 114)))) (+ (- (- (+ (- (- 187 31) 85) (- (+ 96 97) 50)) (+ 3 (- (+ 42 0) (+ 14 (- 204 176))))) 209) (+ 0 0))) 12) 59)) 5) (- 30 5)) 31))))");
}
#[test]
fn const_expr_175() {
    test_const_expr("static RESULT:u8 (= RESULT (- (+ (- 106 (- 218 (- (- (- (+ 126 (+ (+ 31 (- (- 185 (+ 8 0)) 145)) 64)) 8) 18) 30))) (+ 34 (+ 19 (- 210 (- (- (+ (- (+ 27 162) (+ (+ 11 59) 71)) (+ (+ (- 101 36) 131) 0)) (+ (+ (- 165 (- 252 (+ 43 44))) (+ 0 (- (+ 31 (- (- 239 2) (+ 45 (+ (+ 0 0) (- 23 23))))) 221))) 7)) (+ 47 (- (+ 54 162) 121))))))) 0))");
}
#[test]
fn const_expr_176() {
    test_const_expr("static RESULT:u8 (= RESULT (- (+ 36 (+ (- 230 157) (- (- 234 0) (- (- (+ (+ 11 57) (- (- (- 250 59) (- (+ (+ 10 40) (+ 20 82)) 114)) (- 115 (+ 16 84)))) (- 211 (+ (+ 24 (+ 3 (- 152 130))) (- (+ 80 (+ (- (- 217 (- 220 (+ (- 234 219) (- 158 96)))) 74) (- (+ 40 205) 245))) (+ 15 16))))) (+ (+ 1 0) 4))))) 0))");
}
#[test]
fn const_expr_177() {
    test_const_expr("static RESULT:u8 (= RESULT (- (- (+ (- 63 0) (- 244 52)) 0) (+ (- 64 (+ (- (+ (+ 13 (- 72 32)) 106) 95) 0)) 0)))");
}
#[test]
fn const_expr_178() {
    test_const_expr("static RESULT:u8 (= RESULT (- (- (+ (- 148 (+ 21 (- 131 (- (+ (- (- (+ (- 206 162) (- 202 25)) (- (- (+ (+ (+ (- 188 170) 0) 0) 54) 45) (- (+ (- (+ 59 (+ 35 143)) (+ (- 243 142) 101)) 175) 200))) (- 146 3)) 61) (- (- (- (- (- 254 1) 2) (- (- 247 40) 198)) (+ 16 64)) 107))))) (+ (+ (- (+ 18 92) (+ (+ 8 (- (- (- 184 23) 80) (+ (+ 2 (+ (- (+ (+ 3 (+ 21 0)) 99) 121) (- 60 (+ 7 (- 51 (+ 0 4)))))) 44))) 71)) 28) 160)) (+ 0 (- (+ 16 (+ 65 (- (+ (+ 6 6) (+ 15 (+ (+ (+ 0 (+ (- (- 192 (+ 6 25)) (+ 161 0)) (- (+ (- 207 195) (- 115 63)) (- 171 108)))) 10) (- 197 161)))) (+ (+ (+ 18 19) 37) 0)))) (- 151 70)))) 0))");
}
#[test]
fn const_expr_179() {
    test_const_expr("static RESULT:u8 (= RESULT (- (- (- (- (- (- (+ 51 204) (- (- (- (+ 40 200) 14) 6) (- (+ (+ (- 133 126) 32) (+ (+ (+ 3 13) (+ (- (+ 4 (- 251 231)) (+ (+ 2 11) (+ (- 15 15) 0))) 22)) (- (+ 80 (- (+ 32 (+ (- 86 22) 129)) 145)) 13))) (+ 2 (+ (+ 0 6) (+ (+ (+ 0 (+ 0 (- 213 213))) 1) 6)))))) 0) 0) 0) 0) (+ (- (- (- (- 242 (+ (+ 0 0) (- (- 197 101) 90))) (- 118 (- 192 (+ 23 71)))) 101) (- 243 128)) 0)))");
}
#[test]
fn const_expr_180() {
    test_const_expr("static RESULT:u8 (= RESULT (- (+ 36 219) (+ (- 219 (+ (+ 6 25) (+ 188 0))) 0)))");
}
#[test]
fn const_expr_181() {
    test_const_expr("static RESULT:u8 (= RESULT (+ (+ (+ 2 (- (- 142 (+ 9 10)) (+ (+ 7 48) 56))) (+ 71 0)) (+ 24 146)))");
}
#[test]
fn const_expr_182() {
    test_const_expr("static RESULT:u8 (= RESULT (- (+ 63 192) 0))");
}
#[test]
fn const_expr_183() {
    test_const_expr("static RESULT:u8 (= RESULT (- (+ (- 80 (+ (+ 6 32) (+ 0 0))) (- 243 (- (+ 21 132) (- (+ 34 138) (+ (+ 7 0) (+ (- 241 (- 244 (- 130 (- 238 (- 210 (+ 22 (- 112 (- 66 (- 78 55))))))))) (- 58 (- 66 (+ (- (- 237 (- 180 (- 92 (- 163 (- 150 11))))) 104) (+ (- (+ 54 (+ 0 0)) (- (+ 254 (- 245 (+ 35 210))) (+ (- (- 123 13) 43) 136))) (- (- 199 (+ (- 243 230) 69)) (- 207 108)))))))))))) 0))");
}
#[test]
fn const_expr_184() {
    test_const_expr("static RESULT:u8 (= RESULT (+ (+ (- (+ 111 (- (- 210 (- (- 144 (+ 24 (+ 0 (+ (+ (+ (- (+ 209 0) 209) 0) 0) (- 249 (- (- 253 1) 3)))))) 59)) 37)) (+ (+ 4 (- (+ (- (- (- 221 55) 37) (- 134 (- 153 (+ 25 (+ 100 (- 56 (- (- 236 138) 42))))))) (+ (+ 48 (- 152 152)) (+ 24 72))) (+ (- (+ 27 (- 237 72)) (- 208 39)) (+ 39 79)))) 183)) (+ 32 0)) 213))");
}
#[test]
fn const_expr_185() {
    test_const_expr("static RESULT:u8 (= RESULT (+ 36 (- 232 13)))");
}
#[test]
fn const_expr_186() {
    test_const_expr("static RESULT:u8 (= RESULT (- (- (- (- (- (+ (+ 42 (- (- 165 (- 158 61)) 68)) (+ (- (+ 36 (- (- (- (- 241 27) 40) 36) (- (- (+ (- 79 62) 105) 87) (+ (- (+ (- (+ 21 43) (- 101 80)) (+ (+ 175 0) (- 239 239))) 214) (- 189 (- (- 252 (- 175 159)) 51)))))) 94) (+ 40 (+ (+ (- (- (- (- 241 (+ 1 6)) (+ 7 (- (+ 16 83) (- 159 88)))) 18) 179) (- 63 48)) 103)))) (+ (- (- (+ 46 184) 120) (- 208 (- (+ 84 (- 224 56)) 154))) 0)) (- 188 188)) 0) (+ 0 (+ (- 7 7) (+ 0 (- 50 50))))) 0))");
}
#[test]
fn const_expr_187() {
    test_const_expr("static RESULT:u8 (= RESULT (- (+ 127 128) 0))");
}
#[test]
fn const_expr_188() {
    test_const_expr("static RESULT:u8 (= RESULT (- (+ (+ 31 32) 192) 0))");
}
#[test]
fn const_expr_189() {
    test_const_expr("static RESULT:u8 (= RESULT (- (- (+ (+ (+ (- (+ 63 63) (+ 90 (+ (- 79 79) (- 194 194)))) 219) (- 38 38)) 0) (+ (- 121 (+ (- (+ 38 193) (- (- 240 127) 3)) 0)) 0)) 0))");
}
#[test]
fn const_expr_190() {
    test_const_expr("static RESULT:u8 (= RESULT (+ (- 95 59) 219))");
}
#[test]
fn const_expr_191() {
    test_const_expr("static RESULT:u8 (= RESULT (+ 36 (- (- 236 9) (+ (+ (- (- 204 (+ (- 69 (- 84 45)) (- 135 74))) (+ (+ 56 (- 169 113)) (+ 0 0))) 7) 0))))");
}
#[test]
fn const_expr_192() {
    test_const_expr("static RESULT:u8 (= RESULT (- (+ (- (- 198 117) (+ (- 200 (+ (- 124 (- 159 97)) (+ 62 (- (+ (- 160 130) (+ (- (- 199 (- (+ 38 (- 164 11)) (- (- (- 251 10) (- 129 31)) 21))) (+ 26 (- 107 28))) (- (+ 165 (+ (- (- (+ 41 168) 121) 88) (- 55 (- (+ 148 0) (+ 93 0))))) 38))) (- (- 246 82) 45))))) (+ (+ 1 7) 18))) (+ 53 (+ (+ 40 0) (+ 40 (- 99 19))))) 0))");
}
#[test]
fn const_expr_193() {
    test_const_expr("static RESULT:u8 (= RESULT (+ (- 229 144) (+ (- 161 137) (+ 73 73))))");
}
#[test]
fn const_expr_194() {
    test_const_expr("static RESULT:u8 (= RESULT (- (- (- (+ 42 213) 0) 0) 0))");
}
#[test]
fn const_expr_195() {
    test_const_expr("static RESULT:u8 (= RESULT (+ (+ (- 184 (+ 88 88)) 43) (- 207 3)))");
}
#[test]
fn const_expr_196() {
    test_const_expr("static RESULT:u8 (= RESULT (+ (- (+ (- (+ 95 96) 156) 105) (+ 3 10)) 128))");
}
#[test]
fn const_expr_197() {
    test_const_expr("static RESULT:u8 (= RESULT (+ (- (+ (+ 2 11) 66) 28) (+ 34 (- (+ 56 170) 56))))");
}
#[test]
fn const_expr_198() {
    test_const_expr("static RESULT:u8 (= RESULT (+ 63 192))");
}
#[test]
fn const_expr_199() {
    test_const_expr("static RESULT:u8 (= RESULT (+ (+ 42 (- 225 140)) 128))");
}
#[test]
fn const_expr_200() {
    test_const_expr("static RESULT:u8 (= RESULT (+ 36 (+ 73 (+ (+ 10 10) (+ (- 61 (+ 19 0)) 84)))))");
}
#[test]
fn const_expr_201() {
    test_const_expr("static RESULT:u8 (= RESULT (+ (+ (- (+ 51 (- (+ 248 (+ (- (- (+ (- 233 179) 163) (- 189 42)) 70) (- (+ 12 (+ (+ (+ 4 (+ 8 (+ (- (- 104 42) (- 194 132)) 0))) (+ 15 48)) (+ (- 216 (- 247 31)) 0))) (- 151 64)))) 44)) 0) 0) 0))");
}
#[test]
fn const_expr_202() {
    test_const_expr("static RESULT:u8 (= RESULT (+ (- (- (- (- (+ 127 (+ 128 (- 129 129))) 0) (+ 0 0)) (- (+ (+ (- 26 11) 16) 186) 217)) 0) 0))");
}
#[test]
fn const_expr_203() {
    test_const_expr("static RESULT:u8 (= RESULT (+ (+ 15 (- (- (- 243 10) 83) (- 111 (+ (- 122 (- (+ (+ 6 19) (+ 155 0)) (+ (- 216 (+ (- 30 (+ (+ 0 (+ 0 (+ (- 184 184) (- 22 22)))) (+ 2 2))) 131)) 0))) (- (+ 26 52) 70))))) (- 193 1)))");
}
#[test]
fn const_expr_204() {
    test_const_expr("static RESULT:u8 (= RESULT (- (+ (- (+ (+ 24 25) 100) 22) (- 148 20)) 0))");
}
#[test]
fn const_expr_205() {
    test_const_expr("static RESULT:u8 (= RESULT (- (- (+ (+ (- (+ 16 96) (+ (+ (- 114 87) 0) (+ (- 94 94) 0))) (- (- 247 20) (+ (- 203 (+ (- (+ 73 (- 189 115)) (+ 16 67)) 130)) (+ 9 39)))) (- (+ (+ (- 53 53) (- (+ (- 205 198) (- (+ (+ 2 8) 41) (- 207 (+ 51 (+ 38 115))))) 50)) 28) 33)) (- 1 1)) 0))");
}
#[test]
fn const_expr_206() {
    test_const_expr("static RESULT:u8 (= RESULT (+ (- 207 (- (+ 47 96) (- 89 (- (+ (- (+ (+ (- (- (- 238 (- (+ (- (+ 18 112) 100) 31) (+ (+ 0 (- 228 225)) 22))) (- 245 (+ 17 68))) (- 252 (+ (+ (+ (- (- 232 21) (+ 29 179)) 15) 38) (- 227 (+ 9 (+ (+ 1 8) 40)))))) 46) 185) 215) 64) (+ 13 56))))) (+ (- (- 163 (- 214 177)) 62) (- (- 223 111) (- 198 (+ 50 100))))))");
}
#[test]
fn const_expr_207() {
    test_const_expr("static RESULT:u8 (= RESULT (+ 63 192))");
}
#[test]
fn const_expr_208() {
    test_const_expr("static RESULT:u8 (= RESULT (- (+ (+ 42 43) (+ (+ 10 32) (+ (+ (- 145 138) 35) (- (- 212 30) (+ 96 0))))) 0))");
}
#[test]
fn const_expr_209() {
    test_const_expr("static RESULT:u8 (= RESULT (+ 51 204))");
}
#[test]
fn const_expr_210() {
    test_const_expr("static RESULT:u8 (= RESULT (- (- (- (- (- (+ (+ 42 (- (+ (- (- 234 (+ 5 31)) 77) 0) (+ 30 91))) 213) 0) 0) (+ (+ 0 0) (+ 0 0))) (+ 0 0)) 0))");
}
#[test]
fn const_expr_211() {
    test_const_expr("static RESULT:u8 (= RESULT (+ 85 (+ 24 (+ 73 (- (- (- 237 17) 145) 2)))))");
}
#[test]
fn const_expr_212() {
    test_const_expr("static RESULT:u8 (= RESULT (+ 63 192))");
}
#[test]
fn const_expr_213() {
    test_const_expr("static RESULT:u8 (= RESULT (- (+ (- (+ 39 196) (+ 184 (+ 0 0))) 204) 0))");
}
#[test]
fn const_expr_214() {
    test_const_expr("static RESULT:u8 (= RESULT (+ (- (+ 62 (- 166 42)) 150) 219))");
}
#[test]
fn const_expr_215() {
    test_const_expr("static RESULT:u8 (= RESULT (+ (+ 17 34) (- (+ 33 (- (- 235 (+ 2 (+ 11 (- (+ 57 (- (- (- 243 (- 58 52)) (- (+ 19 (- 189 94)) (- 152 (+ (- (+ 35 36) (- 68 7)) (- 149 87))))) (+ 15 16))) (+ 76 153))))) (+ 3 15))) (+ (- 115 99) (- (+ 28 (+ 9 (+ (+ 1 1) (+ (- (+ 19 (+ (+ (- 232 (+ 44 (+ (+ 29 147) (- 0 0)))) 0) (- (+ 26 106) (+ 106 (+ 0 (+ 0 (+ 0 0))))))) 53) (+ 1 (+ 1 11)))))) 39)))))");
}
#[test]
fn const_expr_216() {
    test_const_expr("static RESULT:u8 (= RESULT (+ 127 (- 159 (- 40 (- (- 253 (+ (- 215 (+ (+ 53 (+ 161 (- 166 (- 176 10)))) (- (+ 6 (+ 10 30)) 46))) 3)) 240)))))");
}
#[test]
fn const_expr_217() {
    test_const_expr("static RESULT:u8 (= RESULT (- (+ 42 (+ 71 (+ (+ 9 (+ (+ (- (- 252 54) (+ (+ 65 (+ (+ (+ (- (- 198 92) 104) 6) 18) 105)) 0)) (- 110 (- 186 (- 179 93)))) (+ 26 0))) (- 169 (+ 37 (+ 6 31)))))) 0))");
}
#[test]
fn const_expr_218() {
    test_const_expr("static RESULT:u8 (= RESULT (+ (+ 9 54) (- 215 23)))");
}
#[test]
fn const_expr_219() {
    test_const_expr("static RESULT:u8 (= RESULT (- (- (- (+ (- 89 26) (- (- (- 247 (- 55 (- (- 248 1) (- (- 237 (- (- 239 (+ 38 (- (+ 26 158) (- 173 65)))) 114)) (+ 12 (+ 0 (+ 0 0))))))) (- 229 202)) (- 112 (- 244 138)))) (+ 0 0)) (+ 0 0)) (+ 0 (+ (+ (+ 0 (- (+ (- 82 (- (+ (+ 31 94) (+ 0 0)) 60)) (+ 15 91)) (+ 17 (+ 26 (+ 13 67))))) (- (+ 17 (- 207 (+ 29 90))) 105)) (- 164 (- (- 237 (- (- 249 92) 152)) 68))))))");
}
#[test]
fn const_expr_220() {
    test_const_expr("static RESULT:u8 (= RESULT (- (- (+ (+ (- 124 (+ 107 0)) (+ (- 84 75) (- 166 107))) (+ (+ 7 (+ (- 170 162) (- 169 142))) (+ (- (+ 192 (+ 0 (+ 0 0))) (- (- 220 28) 25)) 103))) 0) (+ (- (- (- (- 246 (+ 5 (- (- 181 28) 147))) 159) (- (- (- (+ 62 (- 215 26)) 1) (+ (+ (- (- (+ 26 133) (- 158 (+ (- 58 (- 129 (- (+ 17 88) 12))) (- 169 77)))) 109) (+ (- (- (- (+ (+ (- 151 (- 251 134)) 206) 0) (- (+ 39 156) (- (+ (+ 38 0) 156) (- (+ 87 88) (+ 86 86))))) 8) 211) (+ (- 242 (+ (- (- (+ (+ 9 30) (+ 40 160)) 147) (- (- (+ 39 118) (- 138 80)) 65)) 175)) (- (+ 203 0) (- (- (+ 47 192) 27) (+ 6 12)))))) 124)) (- (- (+ (- (+ 104 105) (+ 85 (- (- 215 (+ 3 17)) 109))) (- 215 99)) 19) 93))) 33) (+ (- (- (+ 18 (- (- 134 46) (- (- 209 74) (- 200 80)))) 50) 41) (- 159 159)))))");
}
#[test]
fn const_expr_221() {
    test_const_expr("static RESULT:u8 (= RESULT (+ (- 188 (- 202 50)) (+ 73 (+ 48 98))))");
}
#[test]
fn const_expr_222() {
    test_const_expr("static RESULT:u8 (= RESULT (- (+ (- (+ 36 219) 0) 0) 0))");
}
#[test]
fn const_expr_223() {
    test_const_expr("static RESULT:u8 (= RESULT (- (+ (+ 85 170) (+ (- 82 82) (- 102 102))) 0))");
}
#[test]
fn const_expr_224() {
    test_const_expr("static RESULT:u8 (= RESULT (+ 36 (+ 54 165)))");
}
#[test]
fn const_expr_225() {
    test_const_expr("static RESULT:u8 (= RESULT (+ (+ 5 31) (- (- 240 12) 9)))");
}
#[test]
fn const_expr_226() {
    test_const_expr("static RESULT:u8 (= RESULT (- (- (- (- (- (- (- (+ (- (+ (- 250 (- 238 (+ 50 102))) 0) (+ 101 0)) 192) (+ (- 15 (+ (+ (+ (+ 0 (+ (- (+ 57 115) 172) (+ 0 0))) (- (- (+ 125 (- 170 44)) (+ (+ 8 16) (+ 8 17))) 202)) (- 77 (+ 12 (+ (- (+ 34 175) 189) 42)))) 12)) (- 25 25))) (- 54 (- (+ 41 124) (- 201 90)))) (- 97 97)) 0) 0) (+ 0 0)) 0))");
}
#[test]
fn const_expr_227() {
    test_const_expr("static RESULT:u8 (= RESULT (+ 51 204))");
}
#[test]
fn const_expr_228() {
    test_const_expr("static RESULT:u8 (= RESULT (+ (+ (+ (+ (+ 0 (+ 1 (+ (- (- (+ (+ (+ (+ (- (- (- 232 23) 9) 200) (+ (+ 0 0) (+ (+ 0 0) 1))) 6) (+ 6 36)) 197) 4) 242) 0))) 11) 0) 73) (+ 85 (+ (- (- 254 13) 199) 43))))");
}
#[test]
fn const_expr_229() {
    test_const_expr("static RESULT:u8 (= RESULT (- (+ (+ 42 0) 213) 0))");
}
#[test]
fn const_expr_230() {
    test_const_expr("static RESULT:u8 (= RESULT (- (+ (- (- (+ (+ (- 110 58) 52) 105) 13) 145) (- 252 (- 171 123))) 0))");
}
#[test]
fn const_expr_231() {
    test_const_expr("static RESULT:u8 (= RESULT (- (+ 42 213) (+ (- (- 230 51) (+ 59 (- (- (- (- 254 (- (- 139 (- (+ (+ 19 20) 196) (+ 30 (- 186 (+ (+ (- 124 124) 0) (+ 1 (+ 0 1))))))) 116)) (+ (+ (+ (+ (+ (+ 0 0) 0) 0) (- 189 (- 228 (+ 7 (- (+ 20 (- 176 76)) 88))))) (+ 0 0)) (+ (- (- (+ 200 (+ (+ (- (+ 33 0) (- 100 67)) 0) 0)) (+ (- 126 (+ 17 (+ 7 (- 139 94)))) (+ (- (+ (- 116 90) 160) 170) 100))) (+ 4 (- (+ 25 128) 132))) (+ 0 0)))) 9) (- (- (+ 64 130) (- 82 57)) (+ (+ (+ 0 (- 21 (+ 3 (- (- (+ 96 (+ 19 (+ 13 65))) (- 73 (+ 7 (+ 23 24)))) (- 235 77))))) 10) (- (- (+ 40 123) 115) 12)))))) (+ (- (- (+ (+ 1 8) (- (+ (+ (+ 6 (+ (+ (- (- 250 125) 125) (+ (+ 0 1) 3)) (- (+ 38 (- 191 (- 45 9))) 173))) 91) 0) (- 186 (- (- (+ (- (- 232 13) (+ (- 141 (- 204 (- 229 150))) 84)) (- 241 (- 148 27))) 122) (- 47 34))))) (+ (+ (- (+ (+ 0 2) (- 194 (+ (+ (- (+ (+ (+ 130 0) 0) (+ (+ 0 0) 0)) (+ 17 108)) (- (+ 63 64) 106)) (+ (- 92 (+ (- (+ 212 0) 142) 0)) (- 228 (- (+ 14 90) (- (- 250 7) 231))))))) (+ 1 (- 91 82))) 6) 16)) 24) (- 196 (+ (+ 21 (- (- (- (- (- 254 (- 223 223)) 0) (- 93 (+ (- (- (+ 62 188) 57) (- 208 (- 227 (+ 31 96)))) (- (- (+ (+ (- 183 159) 98) (- (+ 253 0) (+ 43 88))) (- 155 (+ (- 152 33) (+ 0 0)))) 208)))) (+ (+ (- (- 214 (- (- (- 95 44) (- 183 (+ 25 155))) (+ (+ 2 15) (+ (- 126 120) (+ 1 11))))) (+ 27 163)) (+ 34 0)) (+ (- (- 247 18) (- (+ 44 (+ (- (- 203 139) (- 119 114)) 118)) 10)) (- 96 23)))) 66)) (- 174 (+ (- 64 54) (- (+ (- (- 232 (- (- 249 73) (- 236 156))) 96) (+ 32 (+ (- 248 (- 236 (+ 3 (- 217 (- 222 8))))) (- (+ 21 110) 18)))) 170)))))))))");
}
#[test]
fn const_expr_232() {
    test_const_expr("static RESULT:u8 (= RESULT (- (- (- (- (- (+ 85 170) 0) 0) (+ (+ 0 0) 0)) 0) (- (+ (+ (+ 5 (+ 5 (- 69 52))) (- (- (+ (- 199 76) 123) (- 67 (+ 12 39))) (+ 174 0))) (+ 0 (- 230 (+ 38 192)))) (+ (+ (+ (+ (+ (- 172 171) 1) 11) 14) 0) 56))))");
}
#[test]
fn const_expr_233() {
    test_const_expr("static RESULT:u8 (= RESULT (- (- (+ (+ (+ 4 (+ (- (- 248 10) 237) 9)) (- 188 117)) (+ 170 0)) (+ 0 (- (- (+ (+ 5 20) 127) (+ 46 94)) (+ (+ (+ (- 57 (+ 8 49)) (+ (- 172 (+ 43 129)) (+ (+ 0 (+ 0 0)) (- 235 (+ (- 241 (- (+ (- 43 (+ 7 0)) 0) 30)) 0))))) (+ (- (+ (+ 5 24) (- (- 221 134) (- (- 141 11) (- (- 236 46) 88)))) (+ 12 76)) (+ (- 116 116) 4))) 8)))) (+ (- 152 (- (- 204 40) 12)) (- 62 62))))");
}
#[test]
fn const_expr_234() {
    test_const_expr("static RESULT:u8 (= RESULT (- (- (- (+ (+ (+ 10 (+ 17 (+ 12 24))) 192) 0) 0) 0) (+ (- 151 (- 152 1)) 0)))");
}
#[test]
fn const_expr_235() {
    test_const_expr("static RESULT:u8 (= RESULT (- (- (+ 63 192) (+ (- 210 210) 0)) 0))");
}
#[test]
fn const_expr_236() {
    test_const_expr("static RESULT:u8 (= RESULT (+ (- (+ (- 179 128) (+ (- 145 94) 153)) 0) 0))");
}
#[test]
fn const_expr_237() {
    test_const_expr("static RESULT:u8 (= RESULT (- (+ (+ (- (- 192 (- (- 121 24) 23)) (- 147 34)) (+ 15 16)) (+ (- 199 (- 199 (- (- (+ (- 54 (- 171 158)) 164) 47) 115))) 176)) 0))");
}
#[test]
fn const_expr_238() {
    test_const_expr("static RESULT:u8 (= RESULT (- (+ (- (- (- (+ 51 204) (- 30 (- (+ (- (+ 24 (+ (- 132 (+ 29 89)) (+ (+ (+ 2 2) (- 121 (- (+ 63 128) (- 94 16)))) 48))) 74) (+ 48 96)) 138))) 0) 0) 0) 0))");
}
#[test]
fn const_expr_239() {
    test_const_expr("static RESULT:u8 (= RESULT (+ 63 (- (- (+ 63 (- (- (+ 59 180) (- (- 210 63) 105)) (+ 3 (- 237 (- 238 (+ 5 0)))))) 24) 37)))");
}
#[test]
fn const_expr_240() {
    test_const_expr("static RESULT:u8 (= RESULT (- (- (- (+ (+ (+ (+ (- 27 22) 12) (+ (- (+ 10 51) 61) 0)) (+ (- 130 (+ 37 (- 76 (+ (+ 0 (+ 0 0)) (+ (- 83 83) (+ (+ (+ 0 (- (+ 21 86) 107)) (+ (- 158 158) (+ 0 0))) 0)))))) (- (+ 83 (+ (+ 0 0) 0)) (+ (- (+ (+ (- 190 (+ 92 93)) (- 185 (- (- (- (- 252 34) (+ 7 29)) (- 67 (+ 7 37))) (+ 0 (- 40 38))))) 168) (- (- (- 237 (+ (+ 0 0) 0)) (- 163 116)) 11)) 44)))) (- 241 37)) (- 178 (- 239 61))) 0) 0))");
}
#[test]
fn const_expr_241() {
    test_const_expr("static RESULT:u8 (= RESULT (- (- (- (- (- (+ (- (+ (+ 23 (- (+ (+ 24 (- 124 124)) 123) (+ (+ (+ 0 1) (- (- (+ (+ 30 90) (+ 40 80)) 106) (+ 30 (+ (+ 7 8) (+ 39 39))))) 63))) 96) 128) (- 237 (- (- 249 (- 191 134)) (+ 29 (+ 23 95))))) (+ 0 0)) 0) 0) (- (- 172 (- 155 (- (- 241 (+ 0 (- (+ 43 86) (- 185 60)))) (- (+ (+ (+ (- 23 15) 24) (+ 0 (+ (+ 0 0) 0))) 162) 44)))) (- (- 253 (+ 23 24)) (- (+ (+ (+ (+ (- (- 208 (+ 10 (- 98 35))) 128) (- (+ (+ 14 (- (+ 38 152) (- 209 19))) (- 161 119)) (+ (+ 0 (- (- (- (+ 79 158) (+ 11 24)) (- (- 246 131) 7)) 88)) (- 86 (+ (- 211 (+ 189 (+ 0 0))) 22))))) (- (- (+ (- (- 199 (- 249 186)) 12) 125) 47) (+ 186 (- (+ (- (+ (- (- 190 78) (- 185 123)) (- (+ 121 121) (+ 45 45))) 189) 65) 78)))) (+ (+ (- 201 (- (- (- (- 254 (- (+ 5 31) 31)) 6) 18) 24)) 0) 0)) 159) 88)))) 0))");
}
#[test]
fn const_expr_242() {
    test_const_expr("static RESULT:u8 (= RESULT (- (- (+ (+ 17 68) (+ (+ 34 136) 0)) (+ 0 0)) (+ (- (- (+ 20 (+ (- (- (- 245 6) 22) (+ 35 (+ 20 122))) (+ (+ (+ (- (- 202 37) (+ (+ 13 69) (- (+ 94 (- (- 246 (+ 2 10)) (+ (- 147 7) 0))) 105))) (- 250 (- 254 (- 239 (- 235 0))))) 0) (- 62 62)))) (+ (- (- (+ (+ 26 (- (- 240 51) (+ (+ 9 (- 153 117)) 91))) (+ (- 242 (+ (- (- (+ 113 113) 39) (+ (+ (- (- 224 22) 193) 30) (+ 16 (- 161 60)))) 191)) 60)) (- 219 (- (+ 58 118) (- (+ 117 (- (- 218 54) 47)) 217)))) (+ 15 (- (+ 30 (- (+ (+ 18 (- (+ 37 (+ 37 149)) 205)) 181) 65)) 103))) 27)) (+ (- 88 (- 81 2)) 19)) 0)))");
}
#[test]
fn const_expr_243() {
    test_const_expr("static RESULT:u8 (= RESULT (+ (+ (+ 1 11) 73) (- (+ (- (+ (- 228 (- (- (+ (- 199 140) (- (+ 50 152) (+ (+ 6 18) 0))) 14) (+ (- (+ 30 (- (- 220 0) (+ (+ (+ 5 18) (- 192 145)) 0))) (- 192 13)) 6))) 76) (+ 5 (+ 0 (- (- 84 81) 3)))) 167) 80)))");
}
#[test]
fn const_expr_244() {
    test_const_expr("static RESULT:u8 (= RESULT (- (+ 36 219) (+ 0 0)))");
}
#[test]
fn const_expr_245() {
    test_const_expr("static RESULT:u8 (= RESULT (- (+ (- (- (+ 51 (+ 34 (- (- 249 48) 31))) 0) 0) 0) 0))");
}
#[test]
fn const_expr_246() {
    test_const_expr("static RESULT:u8 (= RESULT (- (- (+ 85 (+ (+ (- (- 165 (- 251 (+ (- 242 205) 148))) (- (- 243 (- (- 249 (+ (+ (+ (- (+ (+ 18 19) 0) (- 174 (- 182 45))) 0) (- (+ (+ 18 (+ 38 0)) (- 201 (+ 72 73))) (+ (- 102 75) (+ (- 69 58) (+ 14 58))))) (+ 0 (- (- (+ 89 (- 196 107)) (+ (+ 0 2) 14)) 162)))) (- (+ (- 242 (+ 7 28)) 0) (- (- (- (+ (- 116 50) (- 252 185)) (+ (+ (- 137 135) (- 22 12)) 52)) (- (- (+ (+ 6 14) (- 237 155)) (+ 3 12)) (- (+ 98 99) 149))) 23)))) (- 247 (+ 19 (- (+ 34 105) 22))))) (+ 28 0)) (+ (- (- (- (+ 62 189) 49) 71) 3) (+ (- 160 (- (+ (- (- (- (- 252 8) 0) 7) 167) (- (- (+ 80 161) 22) (- (+ (+ 16 66) (+ (- 95 (+ 13 41)) (+ 42 (+ 0 0)))) (- (- (+ (+ (+ 3 3) (+ 20 20)) 188) (- 132 (+ 13 28))) 55)))) 52)) 0)))) (- (- 116 (+ (- (+ 1 (+ 1 6)) 7) 3)) (+ 112 0))) 0))");
}
#[test]
fn const_expr_247() {
    test_const_expr("static RESULT:u8 (= RESULT (+ 51 204))");
}
#[test]
fn const_expr_248() {
    test_const_expr("static RESULT:u8 (= RESULT (+ 42 213))");
}
#[test]
fn const_expr_249() {
    test_const_expr("static RESULT:u8 (= RESULT (+ (+ 85 (+ (- (+ 50 204) (+ (- (+ (+ (- 160 (+ 78 (+ (+ (- 246 (+ 36 (+ (+ 18 74) (+ 30 62)))) 0) (- (+ (- (+ (+ 37 37) 148) 175) 188) (- (- 254 4) (+ (+ (+ 1 2) (- 138 128)) (- (- 216 148) (+ 13 0)))))))) 21) (+ 50 (+ (+ 1 (+ 3 (+ (+ 0 2) (- (- 213 81) 130)))) (- (- (- 254 0) (+ (- (+ 60 61) (- 134 (+ 3 11))) (- 199 194))) 206)))) 93) 189)) 136)) 0))");
}
#[test]
fn const_expr_250() {
    test_const_expr("static RESULT:u8 (= RESULT (- (- (+ (+ (+ (+ 1 (- 157 152)) 19) 102) (+ (- 131 106) 103)) 0) (+ (+ (+ 0 (- (- (+ (+ (+ 9 20) 60) (- 143 53)) (- 169 17)) 27)) (- 178 178)) (+ 0 (- (- (- (- (- 254 (- (+ 26 (- 253 118)) (+ 39 (- 163 (- 153 107))))) 0) (- (- 252 105) (- 234 151))) 137) 48)))))");
}
#[test]
fn const_expr_251() {
    test_const_expr("static RESULT:u8 (= RESULT (+ 85 170))");
}
#[test]
fn const_expr_252() {
    test_const_expr("static RESULT:u8 (= RESULT (+ 42 (- 233 20)))");
}
#[test]
fn const_expr_253() {
    test_const_expr("static RESULT:u8 (= RESULT (- (+ (- 243 116) 128) (+ (- 41 (+ (+ (- 84 (+ (+ (- 59 32) 0) (+ (+ 2 7) (+ 15 (+ 5 26))))) 6) 33)) 0)))");
}
#[test]
fn const_expr_254() {
    test_const_expr("static RESULT:u8 (= RESULT (- (+ 36 219) (+ (+ (- 87 (- (- (- 253 (- 139 (- 202 92))) (- 145 118)) (- 193 83))) (- 203 (- (- (- (- 254 1) 5) (- 130 (+ (- 122 104) (- (+ (+ (- (- (- 251 0) 101) 137) 26) (+ (- (- 181 29) (+ (+ 7 14) 105)) 134)) (+ (- (- 144 78) (+ (- 240 231) 45)) (+ 19 (- (- 233 (+ 64 (+ (+ 13 52) (+ 0 0)))) 45))))))) 42))) 0)))");
}
#[test]
fn const_expr_255() {
    test_const_expr("static RESULT:u8 (= RESULT (+ 85 (- (+ 238 0) 68)))");
}
#[test]
fn const_expr_256() {
    test_const_expr("static RESULT:u8 (= RESULT (- (- (+ (+ (- 163 (+ 52 (+ (- 148 (+ 19 95)) (+ 35 35)))) 29) (- (- 239 8) 12)) 0) 0))");
}
